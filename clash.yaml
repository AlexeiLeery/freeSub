port: 7890
socks-port: 7891
allow-lan: true

mode: Rule
log-level: info
external-controller: :9090
proxies:
  - {"alterId":-1,"cipher":"aes-256-cfb","name":"517697891","password":"Vm0wd2VHUXhTWGhpUm1oVFlteEtXRmxVU205V1JteFZVMjA1V0ZKdGVEQmFWVll3Vm14YWMySkVUbGROYWtaSVdWZDRZV014VG5OaVJsWnBVbTVDVVZaclVrZFpWMDE0Vkc1T1lWSnRVbGhVVkVwdllqRmFjMWR0UmxkTlZuQlhWRlpXVjJGSFZuRlJWR3M5","port":443,"server":"13.230.132.209","type":"ss"}
  - {"alterId":-1,"cipher":"chacha20-ietf-poly1305","name":"262441138","password":"Vm0xMFlWWXhWWGhTV0d4VFlrZFNjVlV3Vm1GVk1WcHlWMnQwVmxKc1duaFZWM2hyVkd4S2RGVnNhRmhoTWxKSVdWVmFTMlJXUm5KV2JGWlhWbXR3UlZaclkzaFdNazV6VTI1R1YySkdXbFJaYkZwTFZFWmFSMXBJY0U5V2JIQllWMnRhYzFadFNsWlhiVGxhWWtkb2RscEhlRnBsUmxaeVpFWndWMDFHY0ZsWFZFSlhWakZrY2sxSWJGWmlSVnBZV1ZSR2QyRkdhM2xaZW14UlZWUXdPUT09","port":36012,"server":"1j8p03.2weradf.xyz","type":"ss"}
  - {"alterId":-1,"cipher":"aes-256-gcm","name":"631404655","password":"Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSV01WbDNXa1JTVjAxV2JETlhhMUpUVmpBeFYySkVUbGhoTVVwVVZtcEJlRll5U2tWVWJHaG9UVlZ3VlZadGNFSmxSbGw1VTJ0V1ZXSkhhRzlVVmxaM1ZsWmFjVkZ0UmxSTmJFcEpWbTEwYTFkSFNrZGpSVGxhVmpOU1IxcFZXbUZrUjA1R1UyMTRVMkpIZHpGV1ZFb3dWakZhV0ZOcmFHaFNlbXhXVm1wT1QwMHhjRlpYYlVaclVqQTFSMWRyV25kV01ERkZVbFJHVjFaRmIzZFdha1poVjBaT2NtRkhhRk5sYlhoWFZtMXdUMVF3TUhoalJscFlZbGhTV0ZSV2FFTlNiRnBZWlVaT1ZXSlZXVEpWYkZKRFZqQXhkVlZ1V2xaaGExcFlXa1ZhVDJOc2NFZGhSMnhUVFcxb2IxWXhXbE5UTWtsNFUydGtXR0pIVWxsWmJGWmhZMVphZEdSSFJrNVNiRm93V2xWYVQxWlhTbFpYVkVwV1lrWktTRlpxUm1GU2JVbDZXa1prYUdFeGNHOVdha0poVkRKT2RGSnJhR2hTYXpWeldXeG9iMWRHV25STldHUlZUVlpHTTFSVmFHOWhiRXB6WTBac1dtSkdXbWhaTW5oWFkxWkdWVkpzVGs1V01VbzFWbXBLTkZReFdsaFRiRnBZVmtWd1YxbHJXa3RUUmxweFVtMUdVMkpWYkRaWGExcHJZVWRGZUdOSE9WZGhhMHBvVmtSS1QyUkdTbkpoUjJoVFlYcFdlbGRYZUc5aU1XUkhWMjVTVGxkSFVsWlVWbHBIVFRGU1ZtRkhPV2hpUlhCNldUQmFjMWR0U2tkWGJXaGFUVlp3YUZwRlpGTlRSa3B5VGxaT2FWSnRPVE5XTW5oWFdWWlJlRmRzYUZSaVJuQlpWbXRXZDFZeGJISlhhM1JVVW14d2VGVnRNVWRWTWtwV1lrUmFXR0V4Y0hKWlZXUkdaVWRPU0U5V1pHaGhNSEJ2Vm10U1MxUXlVa2RUYmtwb1VqSm9WRmxZY0ZkbGJHUllaVWM1YVUxWFVraFdNalZUVkd4a1NGVnNXbFZXYkhCSVZGUkdVMVp0UmtoUFYyaHBVbGhDTmxkVVFtRmpNV1IwVTJ0b2FGSnNTbGhVVlZwM1ZrWmFjVkp0ZEd0V2JrSkhWR3hhVDJGV1NuUlBWRTVYVFc1b1dGZFdXbEpsUm1SellVWlNhVkp1UWxwV2JYUlhaREZaZUdKSVNsaGhNMUpVVlcxNGQyVkdWbGRoUnpsb1RWWndlbFl5Y0VkV01ERjFZVWhLV2xaWFVrZGFWM2hIWTIxS1IyRkdhRlJTVlhCS1ZtMTBVMU14VlhoWFdHaFlZbXhhVjFsc1pHOVdSbXhaWTBaa2JHSkhVbGxhVldNMVlWVXhXRlZyYUZkTmFsWlVWa2Q0YTFOR1ZuTlhiRlpYWWtoQ1NWWkdVa2RWTVZwMFVtdG9VRll5YUhCVmJHaERUbXhrVlZGdFJtcE5WMUl3VlRKMGExZEhTbGhoUjBaVlZucFdkbFl3V25KbFJtUnlXa1prVjJFelFqWldhMlI2VFZaWmVWTnJaR2hOTW1oWVdWUkdkMkZHV2xWU2JGcHNVbTFTTVZVeWN6RlhSa3BaVVc1b1YxWjZRalJaYWtaYVpVWldjMkZGT1ZkaGVsWlFWa1phWVdReVZrZFdXR3hyVWtWS1dGUldXbmRsVm10M1YyNWtXRkl3VmpSWk1HaExWMnhhV0ZWclpHRldWMUpRVldwS1MxSXlSa2hoUlRWWFltdEtNbFp0TVRCVk1VMTRWVmhzVm1FeVVsWlpiWFIzWVVaV2RHVkZkR3BTYkhCNFZUSXdOV0pIU2toVmJHeGhWbGROTVZsV1ZYaFhSbFp5WVVaa1RtRnNXbFZXYTJRMFdWWktjMVJ1VG1oU2JGcFlXV3RhV2sxR1draGtSMFphVm0xU1NWWlhkRzloTVVwMFZXczVWMkZyV2t4Vk1uaHJWakZhZEZKdGNFNVdNVWwzVmxSS01HSXlSa2RUYms1VVlrZG9WbFpzV25kTk1WcHlWMjFHYWxacmNERlhhMXBQVkd4YWNtSXpaRmhpUmxweVdYcEdWbVZXVG5OaVJuQk9UVzFvV1ZkV1VrZGtNa1pIVjJ4V1UySkdjSE5WYlRGVFRWWlZlV042UmxoU2EzQmFWVmMxYjFZeFdYcGhTRXBWWVRKU1NGVnFSbUZYVm5CSVlVWk9WMVpHV2xaV2JHTjRUa2RSZVZaclpGZGlSMUp2Vlc1d2MySXhVbGRYYm1Sc1lrWnNOVmt3Vm10V01ERkZVbXBHV2xaWFVuWldNbmhoVjBaV2NscEhSbGRXTVVwUlZsZHdTMU14U1hsU2EyaG9VbFJXV0ZsdGRFdE5iRnAwVFZSQ1ZrMVZNVFJXVm1oelZsWmtTR1ZHV2xwV1JWb3pXVlZhVjJOV1RuUlBWbVJUWWtWd1dsWkhlR3BPVjBWNVUydGthbEpYYUZoWmJGSkNUVlphV0dNemFGaFNiRnA2V1ZWYWExUnNXWGxoUkVwWFRWWndhRlY2UmtwbFJsSjFWbXhLYVZKc2NGbFdSbEpIVXpBMWMxZHJaRlpoTWxKWFZGWmFkMDFHVm5Sa1J6bFdVbXh3TUZsVldsTldWbHBZWVVWU1ZrMXVhR2haZWtaM1VsWldkR05GTlZkTlZXd3pWbXhTUzAxSFJYaGFSV2hVWWtkb2IxVnFRbUZXYkZwMFpVaGtUazFYZUZkV01qVnJWVEpLU1ZGcmFGZFNNMmhVVmxSS1JtVnNSbkZXYkdSVFRUSm9iMVpyVWt0U01WbDRWRzVXVm1KRlNsaFZiRkpYVjFaYVIxbDZSbWxOVjFKSVdXdG9SMVpIUlhoalNFNVdZbFJHVkZZeWVHdGpiRnBWVW14a1RsWnVRalpYVkVKaFZqRmtSMWRZY0ZaaWEzQllWbXRXWVdWc1duRlNiR1JxVFZkU2VsbFZaSE5XTVZwMVVXeEdWMkV4Y0doWFZtUlNaVlphY2xwR1pGaFNNMmg1VmxkMFYxTXhaRWRWYkdSWVltMVNjMVp0TVRCTk1WbDVUbGQwV0ZKcmJETldiWEJUVjJzeFIxTnNRbGROYWtaSFdsWmFWMk5zY0VoU2JHUk9UVzFvU2xZeFVrcGxSazE0VTFoc1UyRXlVbTlWYlhoTFZrWmFjMkZGVGxSTlZuQXdWRlpTUTFack1WWk5WRkpYWWtkb2RsWXdXbXRUUjBaSFlrWndhVmRIYUc5V2JURTBZekpPYzJORmFGQldNMEpVV1d0b1EwNUdXbkpaTTJSUFZteHNORll5TlU5aGJFcFlZVVpzVjJFeFZYaGFSM2h6VmpGYVdXRkhjRTVXVkZWNFYxUkNZV0V4VW5SU2JrNVlZa1phV0ZsVVNsSk5SbXhWVW1zNVUwMVdjREZXUjNodllWWktjMk5HYkZkU2JFcElWWHBCTVdNeFpISmhSM2hUVFVad1dWWkdaRFJUTVU1WFYyeG9hMUo2Ykc5VVZsWjNUVVpzVmxkc1RsZFdiSEJaV1ZWV1UxWnJNWFZoUjJoYVpXdGFNMVZzV2xka1IwNUdUbFprVGxaWGQzcFdiWGhUVXpBeFNGSllhR0ZTVjJoVldXdGtiMkl4Vm5GUmJVWlhZa1p3TVZrd1dtdGhNa3BIWWtST1YwMXFWa3haYTFwTFpFWldkV0pHYUdoTldFSjVWbTF3UzFKdFZuTlNia1pZWWtkU2IxUlhlRXBOYkZwSFYyMUdhRTFWYkRSV1J6VlBWMGRLV1ZGc1VsZGhhelYyVmpGYWExZEhWa2hQVmtwT1ZtdHdTVlpzWXpGVE1XUklVMnRhYWxORk5WZFpiRkpIVmtad1dHVklUbGRpUjFKNlZrY3hiMVV4V2taWGFscFhWa1ZyZUZscVJscGxSbVJ4VjJ4S2FHSkZjRmRYVmxKTFZURk9SMVp1UmxOaVZWcFpWbTAxUTFOV2JGWlhhemxYVFZad1NGWXllR0ZXTWtwSVZHcFNWV0V5VWxOYVZscGhZMnh3UjFwSGJGTk5WWEF5Vm14ak1XUXlUWGxUV0doV1lrZFNXVmx0TVZOak1XeHlWMjVPVDFadGRETldiVEV3VmpBeFJWSnJXbFppV0VKSVZqSjRZVmRIUmtabFJtUm9ZVEZ3YjFaWE1UUmhNazUwVm10a1lWSlVWbGhaYlhSTFUyeFplRlZyY0d4U2F6RTBWVEZvYjJGc1NsaGhTRUpXWWxSR2RsWnJXbUZqTWtaR1ZHeFNUbFp1UVhkV1JscFRVVEZhY2sxV1drNVdSa3BZV1d0a2IyUnNXWGRYYlhSVVVqQmFTRmxWV25kaFZtUklZVWM1VjJKVVJUQlpla3BPWlVkT1JtRkdRbGRpVmtwVlYxZDBWMlF4WkhOWGEyaHNVak5DVUZadGVITk9SbGw1VGxVNWFHSkZjRmxaVlZwelZqSkZlRlpZYUdGU00yaDZWbXBHWVZkWFJraGpSMnhYVjBWS1NGWnRlR3RPUjBWNFZXNU9XRmRIZUc5VmExWjNWMFpzV0dSRmRHcGlSbGt5VlcxME1HRnRSalpXYkdoWVlURndhRmxXV2t0ak1rNUhZa1prVTJKRmNFMVhWM0JIVkRGWmVGcElTbWhTTTFKVVZGVmFkMWRzWkZobFIwWmFWbXMxV0ZadE5WTmhNVW8yWWtaa1ZtSllhSHBVYkZwelZtMUdSbFJzWkdsV1dFSktWMVpXVjFVeFdsaFRiR3hvVTBWd1dGbHJXbmRUUm5CR1YydDBhMUl3TlVkVWJGcHJWR3hhV0dRemNGZGlXR2hVVlhwQmVGTkdTbGxoUjBaVFZqSm9WbGRYZEd0aU1rbDRWbTVHVW1KVldsaFphMXAzVFZacmQxZHRkR2hOYTNCSVdXdFNUMVl3TVhGV2EzaGFZVEZ3VEZwRldsZGtWMHBJVW14T1YwMVZiRFpXTVZwaFdWWnNXRlJ1VWxWaE1YQndWVzB4VTJOR1ZuRlNhMXByVFZkU1dGWlhkREJWTURGWFlrUlNWMUo2VmxoV2JURkxVbXhPYzJGR1dtbFNhM0JaVm1wR1lWbFdTWGhpUkZwVFlsZDRUMVpxUmt0VFZsbDVaRWRHYUUxWFVrbFZNblJoWVd4T1JrNVdhRnBpUjJoVVZGUkdkMVl4WkhSa1IzQnBVakZKZDFaRVJtdGlNVmwzVFZWa2FFMHllRmhaYkZKQ1pVWnNjVkpzY0d4U2JWSjVWako0VTJGWFJYcFJiR1JZVm14S1NGcEVTazlqTVZwMVVteE9hVkl4U25oV1JscHZVVEZPUjJKR1dtRlNlbXhXV1Zod1IxWXhhM2RYYlVaWFRXdHdTVlpIY0ZOV1YwVjVWV3hPWVZac2NHaFpNbmgzVWpGd1IyRkdUazVOYldjeFZtMTRhMlF4VVhoV1dHeFVWMGRvY0ZVd1ZURlhSbXgwVFZaT1dGSnNTbGhXTWpWclZHeEtkR1JFVGxoaE1WcHlWakJhU21ReVRrWmhSbkJPVW01Q01sWnFTbnBsUms1SFZtNVdXR0pIVWs5WmJURnZZakZhY1ZGdFJsZE5helY2V1RCV2IxVXlTa2hWYkdoVlZteGFNMVpYZUdGak1WWnlWR3hrYUdWc1dsbFdha1p2WWpKR2MxTnNhR2hTZW14WFdWZDBkMlJzV2tWU2JGcHJUVlp3ZVZwRlZURmhWa3AxVVZoa1YxSnNjRlJWVkVaaFkyc3hWMWRyTlZkU2EzQlpWbTB3ZUdJeVZuTlhibEpPVmxad2MxWnRlR0ZsYkZwMFpVaGthRlp0VWtoVk1XaDNWMFphYzFkdGFGZGhhM0JVVlcxemVGWXlSa2RSYkdST1RVVndWbFl4WkRCaU1VVjNUbFZrV0dKcmNHRlVWRXBUVlVaYWRHVklUazlTYkd3MVZHeGFUMVl5U2xaalJXeGFWbFp3ZGxacVNrZGphelZXVDFaV1YySklRbTlXYWtKclZHMVdkRkpyYUdwU01uaFlWakJXUzFOR1duUmxSM1JQVWpCV05GWlhOVTlYUm1SSVpVYzVWbUV4V2pOV01GcHpWMGRTUm1SSGNHbFNiR3Q1VmxjeE1FMUhSblJTYWxwWFlrZG9XVmxVUm5kaFJteFhWMnQwYWsxck5VaFphMXB2VmpBd2VXRkhPVmRXZWtJMFZsY3hWMUl4Y0VsV2JGcHBWMFZLVlZadGNFZFRNV1JIVjJ0a1dHSlZXbkpVVlZKSFUwWmFkRTVXVG1oTlZXOHlXV3RhYTFadFNsbGhSRTVWVmxad2FGWXdaRTlPYkZwellVZHNVMkpyU2tsV2EyUTBWakZWZUZkc2FGUmhNbEp4VlRCV2QxZEdiSEpYYm1SVVVtNUNSMVl5ZERCaE1VbDNUbFZrVldKR2NISldSM2hoVjBkUmVtTkdaR2xYUjJoVlZsaHdRbVZHVGtkVGJHeG9VakJhVkZacVNtOVdiR1JZWkVkMGFVMXJiRFJXYlRWVFZHeGFObUpHYUZwaE1YQXpXbGQ0V21WVk5WaGtSbFpvWld0YVlWWldaRFJqTVd4WFYyeG9hRkpZYUdGWlZFWjNXVlp3VmxkdGRHcGlWVFZJV1ZWa2IxUnNaRVpUYkVwWFlsaFNjbFJyV25OWFJsSjFWV3hTV0ZORlNtOVdWekI0WWpKT1IxWnVVbXhUUjFKd1ZGWmtVMWRHV2xoa1JFSldUVVJHV0ZsclVsTldNVWw2WVVod1dsWXphRXhhUmxwSFkyczVWMVpzWkd4aE1XOTVWbTF3UjFsV2JGZFRXR2hwVWtad1ZGbHNaRFJVTVZweFVtdDBWRlpzY0hoVk1WSkhWVEF4VjFacVZsWk5ibEpvV1ZkNFQxSnJOVmRhUm5CcFVtdHdTVlp0ZEdGWGJWWllWbXRvYTFJelFuQlZiVFZEVmpGYVdFMVVVbWxOVmxZMVZXeG9kMVZ0U2xaWGJHaFhZbFJHVTFSVlduTk9iRXAwWkVaT1RsWXhTWGhXYkdRMFdWZEdTRk5yYkZKaVIxSllXV3hTUmsxR2NFVlRiR1JxVFZkU01WVnRlRTloVmtsNFUyNW9WMUpzY0hKV1ZFcFhZekpLUjFkdFJsUlNWRloyVm0weE5HUXlWbGRoTTJSWVltMVNXRlJYZEhkVFZscElZMFpPVjFZd1ZqVldWM2hQV1ZaYWMyTkhhRnBOYm1nelZXcEdkMU5IU2toaVJrNVlVbFZ3VTFadE1IZGxSVFZJVWxob1YxZEhhR2hWYkdSVFZqRnNjbGR1WkZkTlYzaFdWVEo0VDJGck1WZGpSRUpoVmxaWmQxbHJaRXRTTWs1RlVXeFdWMVpyY0ZsV2JYQkNaVVpLVjFOdVRtRlNia0p3V1cxMFMxUldXblJOU0doVVRWZFNXRlp0TlZkWFIwcElWVzA1V2xaRldqTlpha1poVjBVeFZWVnRhRTVoZWxWM1ZtMHhNR0V4YkZkVFdHeG9VbnBzVmxaclZrdFVSbHBZWlVkR2FrMVhkRFpaVlZVMVZUSktXV0ZHY0ZkaE1YQjJXV3BLUjJNeFRuTmhSMmhVVWxWd1dGZFhlRzlVYlZaSFYydFdVMkpWV25GVVZtUlRaV3hyZDFwRVVtaFdhM0F4VlZab2ExZEhTa2RYYmtwV1lXdGFhRmt5YzNoV01XUjBZa1pPVTJFelFtOVdNVnBUVWpKUmVWUnVUbGhYUjFKb1ZXeG9VMk5XYkhOV1ZFWlRUVlpHTkZZeU1UQmhSbHAwVld0c1dHRnJOVE5XYWtwSFkyeE9kR0ZHY0d4aE1YQjVWbXBDWVZVeVRuTmpSV2hUWWtVMWNGWnRkSGRXYkZsNFdrUkNXbFl4UmpOVWJGcHJWMGRLYzFOck9WZGhNVnBNVjFaYVlXUkhWa1phUlRsVFlraEJkMWRzVm1GaE1WcFlVMnRhYWxKWGVHRlVWRTVEWlZaV1IxSlViRkZWVkRBNQ==","port":8882,"server":"54.36.174.181","type":"ss"}
  - {"alterId":0,"cipher":"auto","name":"680966275","network":"ws","port":443,"server":"162.159.192.244","skip-cert-verify":true,"tls":true,"type":"vmess","uuid":"673ba378-840f-4928-81f2-203148d07350","ws-opts":{"headers":{"Host":"cowochtmtrkers.turbo021.link"},"path":"/673ba378-840f-4928-81f2-203148d07350"}}
  - {"alterId":-1,"cipher":"aes-256-cfb","name":"375866800","password":"V1ZoT2ExTXlkR2hqTW5STFV6SmFkV015UlQwPQ==","port":443,"server":"135.125.172.139","type":"ss"}
  - {"alterId":-1,"cipher":"aes-256-cfb","name":"1447976235","password":"","port":443,"server":"135.125.172.153","type":"ss"}
  - {"alterId":-1,"cipher":"aes-256-gcm","name":"199195483","password":"WTZSOXBBdHZ4eHptR0M=","port":3389,"server":"149.202.82.172","type":"ss"}
  - {"alterId":-1,"cipher":"chacha20-ietf-poly1305","name":"985046753","password":"VkRGU1UyRkZPVVZSYlhoaFVqQnNNRlJxU2s1TlJURkVUVVJDVGxJeFJqUlVSbEp2WVVad1dGTllVazlpVmxZMVZEQmtXazB3TlVoU2JYaE9Va1p3Ync9PQ==","port":31027,"server":"2d1t5w02.6vczxw.xyz","type":"ss"}
  - {"alterId":-1,"cipher":"aes-256-cfb","name":"2137789297","password":"asdKkaskJKfnsa","port":443,"server":"135.125.172.153","type":"ss"}
  - {"alterId":-1,"cipher":"aes-256-cfb","name":"746195740","password":"","port":443,"server":"198.244.231.27","type":"ss"}
  - {"alterId":-1,"cipher":"aes-256-gcm","name":"858040832","password":"VEV6amZBWXEySWp0dW9T","port":6697,"server":"149.202.82.172","type":"ss"}
  - {"alterId":-1,"cipher":"chacha20-ietf","name":"499788368","obfs":"plain","obfs-param":"5d3ee46961.microsoft.com","password":"jFa4F1","port":3702,"protocol":"auth_aes128_sha1","protocol-param":"46961:1210-Tha","server":"cm01.newcome.xyz","type":"ssr"}
  - {"alterId":-1,"cipher":"chacha20-ietf-poly1305","name":"1560326386","password":"VkRGU1UyRkZPVVZSYlhoaFVqQnNNRlJxU2s1TlJURkVUVVJDVGxJeFJqUlVSbEp2WVVad1dGTllVazlpVmxZMVZEQmtXazB3TlVoU2JYaE9Va1p3Ync9PQ==","port":31031,"server":"4a2u0a02.6vczxw.xyz","type":"ss"}
  - {"alterId":-1,"cipher":"aes-128-gcm","name":"287102188","password":"Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSV01WbDNXa1JTVjAxV2JETlhhMUpUVmpBeFYySkVUbGhoTVVwVVZtcEJlRll5U2tWVWJHaG9UVlZ3VlZadGNFSmxSbGw1VTJ0V1ZXSkhhRzlVVmxaM1ZsWmFkR05GU214U2JHdzFWVEowVjFaWFNraGhSemxWVm14YU0xWnNXbUZrUjA1R1UyMTRVMkpIZHpGV1ZFb3dWakZhV0ZOcmFHaFNlbXhXVm0xNFlVMHhXbk5YYlVaclVqQTFSMVV5TVRSVk1rcElaSHBHVjFaRmIzZFdha1poVjBaT2NtRkhhRk5sYlhoWFZtMHhORmxWTUhoWGJrNVlZbFZhY2xWcVFURlNNVlY1VFZSU1ZrMXJjRWxhU0hCSFZqRmFSbUl6WkZkaGExcG9WakJhVDJOdFJraGhSazVzWWxob1dGWnRNSGhPUm14V1RVaG9XR0pyTlZsWmJGWmhZMnhXY1ZGVVJsTk5WbFkxVkZaU1UxWnJNWEpqUld4aFUwaENTRlpxUm1GU2JVbDZXa1prYUdFeGNHOVdha0poVkRKT2RGSnJhR2hTYXpWeldXeG9iMWRHV25STlNHaFBVbTE0VjFSVmFHOVhSMHB5VGxac1dtSkdXbWhaTW5oWFkxWkdWVkpzVGs1V2JGa3hWa1phVTFVeFduSk5XRXBxVWxkNGFGVXdhRU5UUmxweFVtMUdVMkpWYkRaWGExcHJZVWRGZUdOSE9WZGhhMHBvVmtSS1QyUkdTbkpoUjJoVFlYcFdlbGRYZUc5aU1XUkhWMjVTVGxOSGFGQlZiVEUwVmpGU1ZtRkhPVmhTTUhCNVZHeGFjMWR0U2tkWGJXaGFUVzVvV0ZreFdrZFdWa3B6VkdzMVYySkdhM2hXYTFwaFZURlZlRmR1U2s1WFJYQnhWV3hrTkdGR1ZYZGhSVTVVVW14d2VGVnRNVWRWTWtwV1lrUmFXR0V4Y0hKWlZXUkdaVWRPU0U5V1pHaGhNSEJ2Vm10U1MxUXlVa2RUYmtwb1VqSm9WRmxZY0ZkbGJHUllaVWM1YVUxWFVraFdNalZUVkd4T1NHRkdRbFppVkVVd1ZtcEdVMVp0UmtoUFZtaFRUVWhDTlZaSGVHRmpNV1IwVTJ0a1dHSlhhR0ZVVmxwM1lVWndSbHBHVGxSU2EzQjVWR3hhVDJGV1NuUlBWRTVYVFc1b1dGZFdXbEpsUm1SellVWlNhVkp1UW5oV1YzaHJWVEZzVjFWc1dsaGlWVnBQVkZaYWQyVkdWWGxrUkVKWFRWWndlVmt3V25kWFIwVjRZMFJPVjJGcldreFdha3BQVTFkS1IxcEdaRk5XV0VKMlZtMTBVMU14VVhsVVdHeFZZVEZ3YjFWcVRrTldSbXhaWTBaa1dGWnNjRmxaTUZVMVlWVXhjbUpFVWxkTmFsWlVWa2Q0YTFOR1ZuTlhiRlpYWWtoQ1dWWkhkR0ZXYlZaSVVtdG9VRll5YUhCVmJHaERUbXhrVlZGdFJtcE5WMUl3VlRKMGExZEhTbGhoUjBaVlZucFdkbFl3V25KbFJtUnlXa1prVjJFelFqWldhMlI2VFZaWmVWTnJaR2hOTW1oWVdWUkdkMkZHV2xWU2JGcHNVbTFTTVZVeWN6RlhSa3BaVVc1b1YxWXphSEpVYTJSSFVqRmFXVnBIYUZOV1ZGWldWbGN4TkdReVZrZFdibEpPVmxkU1YxUlhkSGRXTVd4eVZXMUdXRkl3VmpSWk1HaExWMnhhV0ZWclpHRldWMUpRVlRCVk5WWXhjRWhoUjJoT1UwVktNbFp0TVRCVk1VMTRWVmhzVm1FeVVsVlpiWFIzWWpGV2NWTnRPVmRTYlhoYVdUQmFhMkpIU2toVmJHeGhWbGROTVZsV1ZYaFhSbFp5WVVaa1RtRnNXbFZXYTJRMFlURk9SMVp1VGxoaVJscFlXV3RvUTFOV1drZFZhMlJXVFZad01GVnRkRzlWUmxsNVlVaENWbUpIYUVSVWJYaHJWbFpHZEZKdGNFNVdNVWwzVmxSS01HRXhaRWhUYkdob1VqQmFWbFp1Y0Zka2JGbDNWMjVLYkZKdFVubFhhMXByVmpKRmVsRnFXbGRoTWxJMlZGWmFXbVF3TVZkWGJXeHNZVEZ3V1ZkWGVHOVJNVTE0Vld4a1lWSldjSE5WYlRGVFYyeGtjbFpVUmxkTlZuQjZXVEJhVjFkR1duTlRhMmhoVWtWYVlWcFZaRXRUVms1ellVZG9UazFWY0ZkV2JHTjRUa2RSZVZaclpGZGliRXBQVm14a1UxWXhVbGhrU0dSWFRWZDRlVlpYTVVkWFJrbDNWbXBTV2sxSGFFeFdNbmhoVjBaV2NscEhSbGRXTVVwUlZsUkNWazVXV1hoalJXaG9VakpvVDFVd1ZrdE5iRnAwVFZSQ1ZrMVZNVFJXVm1oelZtMUZlVlZzVmxwaVdGSXpXV3BHVjJOV1RuUlBWbVJUWWxob1lWZFVRbUZoTWtwSVUydG9WbUpIZUdoV2JHUk9UVlpzVjFaWWFGaFNiRnA1V1ZWYWExUnRSbk5YYkZaWFlUSlJNRmxVUms5U01WcDFWR3hvYVZKc2NGbFhWM1J2VVRGT1YxZHJaRlpoTWxKWFZGWmFkMDFHVm5Sa1J6bFdVbXhzTlZsVmFFTldiVXBJWVVWU1ZXSllhSEpXYkZwSFpFWktkR05GTlZkTlZXd3pWbXhTUzAxSFNYbFNhMlJVWW1zMVZWbHJaRzlXYkZwelYyNWtUazFXY0hsV01qRkhZV3hhY2s1WWJGaGhNWEJRV1ZaYVMyTnRUa1ZYYkdSb1RXczBNRmRZY0VkV2JWWlhWRzVXVkdKR1NuQldiRnAzVjFaYVIxbDZSbWxOVjFKSVYydGFhMWRIU2taalNFNVdZbFJHVkZwWGVITldiR1J6Vkcxb1YyRXpRWGhXVm1RMFpERlplVk5zYkZaaVIyaG9WV3RXWVZsV2NGWmFSWFJVVm1zMWVsbFZaRzlVYXpGV1kwWmFWMkpIVGpSVWEyUlNaVlphY2xwR1pHbFNNVXAyVmxjMWQyTXlTWGhWYkdSWVltMVNjMWxyV25OT1ZtdDNWbTEwVjAxRVJrWlZiWEJIVjJ4YVdGVnVXbGROYm1ob1ZqQmFWMk5zY0VoU2JHUlhUVlZ3VWxac1pIZFRNVTE0VTFoc1UyRXlhRzlWYkZKWFYwWnNkR1JGZEU1aVJuQXdWRlpTUTFack1WWk5WRkpYVm0xb2VsWnNXbXRUUjFaSFYyeHdWMUpXYjNwWFZsWmhWakpPVjFSdVVsQldiVkpVV1d0V2QxZHNXa2hsUjNCUFZteHNORll5TlU5aGJFcFlZVVpzVjJFeFZYaGFSM2h6VmpGYVdXRkhjR2xXV0VKSFZteGtOR0V4VW5OWFdHeG9Va1Z3V0ZsWGRFdGpiRlkyVW10MGFtRjZWbGhYYTFwcllWWktjMk5HYkZkU2JFcElWWHBCTVdNeFpISmhSM1JUVFVad1dWZFhlR0ZaVm1SWFYyeG9hMUo2Ykc5VVZsWjNUVVpzVmxkc1RsZFdiSEJaV1ZWV1UxWnJNWFZoUjJoYVpXdGFNMVZzV2xka1IwNUdUbFprVGxaWGQzcFdiWGhUVXpBeFNGSllhR0ZTVjJoVldXdGtiMkl4Vm5GUmJVWlhZa1p3TVZrd1dtdGhNa3BIWWtST1YwMXFWa3haYTFwTFpFWldkV0pHYUdoTldFSjVWbTF3UzFKdFZuTlNia1pZWWtkU2IxUlhlRXBOYkZwSFYyMUdXR0pXV2xoV1J6VkxXVlpKZVdGRk9WVldla1oyVmpGYWExWXhWbkphUjNST1lURndTVlpxU2pSV01WVjVVMnRrYWxORk5WZFpiRkpIVmtaU1YxZHNXbXhXTURReVZXMTRiMVV5UlhwUmJVWlhWbTFOZUZscVJscGxSbVJ4VjJ4S2FHSkZjR2hYVm1Rd1dWWnNWMk5HV2xoaVIxSnhWRmQwWVZJeFVYaFhiWFJvVWpGYWVsWXllRWRXTWtWNFkwZG9XRlp0VWxOYVZscGhZMnh3UjFwR2FGTk5NbWcxVm14a01GWXhUWGhhUldSV1lrZFNXVmx0TVZOak1WcDBUVlJDVGsxV2JEVlViR1F3VjBaS2NtSkVUbGRpV0VKVVZqSnplRk5IUmtabFJtUk9ZbTFvYjFacVFtRldNazV6WTBWb1UySkhVbGhVVmxaM1ZXeGFjMXBJWkZSTlZURTBWVEZvYzFVeVJYbGhSemxXWWtaS1dGWXdXbk5rUjFKR1pFVTFhVkp1UVhkV1JscFRVVEZhY2sxV1drNVdSa3BZVm01d1YxWkdXbkZUYTFwc1ZteGFNVlZ0ZUdGaFZrbDRVbGhrVjJKVVJUQlpla3BPWlVkT1JtRkdRbGRpVmtwVlYxZDBWMlF4WkhOWGEyaHNVak5DVUZadGVITk9SbGw1VGxVNWFHSkZjRmxaVlZwelZqSkZlRlpZYUdGU00yaDZWbXBHWVZkWFJrZGhSazVwVW0wNU5GWXhVa05aVjBWNFZXNU9XRmRIZUc5VmExWjNWMFpTVjFkdVpHaFNiRmt5VlcxMGQySkdTbk5UYWtaWFlsaG9URmxXV2t0ak1rNUhZa1prVTJKRmNFbFdXSEJDVFZkTmVGcElTbWhTTTJoVVZGVmFkMkZHV25SalJXUlVUVlZzTkZaWE5VOVhSMHBXVjJ4a1ZtSllhRE5VVlZwaFYwVTFWbFJzWkU1aE0wSktWMVpXVjFVeFduSk5WbVJxVWpKb1lWUldXbmRWUm10NFYyeGthazFYVW5sVWJGcHJWR3hhV0dRemNGZGlXR2hVVlhwQmVGTkdTbGxoUjBaVFZqSm9WbGRYZEd0aU1rbDRWbTVHVW1KVldsaFphMXAzVFVad1ZtRkhkRlZoZWtaWldsVmFhMVl3TVhGV2JrcFhWa1Z3VEZVeFdrZGpiVVpIV2taT1RrMXRhRlpXYlhoVFV6RktkRlp1VGxOaWExcFlXV3RrVTFaR1VsVlRiVGxwVFZad2VWWlhkREJWTURGWFlrUlNWMUo2VmxoV2JURkxVbXhPYzJGR1dtbFNhM0JaVm1wR1lWbFdTWGhpUkZwVFlsZDRUMVpxUmt0VFZsbDVaRWRHYUUxWFVrbFZNblJoWVd4T1JrNVdaRnBpUmtwSVZtdGFkMWRIVmtsVWJHUnBVakZLTmxaclkzaGlNVmw1VWxod1VsZEhhRmhXYlRGT1pVWnNjVkpzY0d4U2JWSmFXVEJrYjFaR1NsbFJiR3hYWWxoU1dGZFdaRmRqTVdSMVVteE9hVkl4U25oV1JscHJWVEpXYzJKR1dtRlRSVFZZVkZaYWQwMVdWbGhsUldSWFRXdFdORmt3Wkc5WFJscDBWV3hPWVZac2NHaFpNbmgzVWpGd1IyRkdUazVOYldjeFZtMTRhMDFHV1hoVVdHaGhVbGRTVjFsclpGTlhWbXgwVFZaT2FrMVdjREJVVmxKRFZHc3hWMkpFVmxWaVIxRjNWakJhUzJOdFNrVlViR1JwVjBWS1ZWWnFTbnBsUmtsNFZHNU9VbUpIVW05WlZFNURVMVprVlZOcVVtaE5helV3Vm0xMGExbFdTWGxoUnpsVlZrVktURlpYZUdGak1WWnlXa2RvVGxaVVJUQldWRVp2WWpKR2MxTnNhRlppVjJoWFdXeG9UbVZHV1hkWGJIQnJUVlp3ZVZwRlZURmhWa3AxVVZoa1YxSnNjRlJWVkVaaFkyc3hWMWRyTlZkU2EzQlpWbTB3ZUdJeVZuTlhiazVZWWxoU1ZWVnFSbUZUUmxsNVpVaGtWMDFWY0ZoWmFrNTNWMFpaZWxGcmFGZGhhM0JRVm1wR1YyUldUbk5XYld4VFRWVndWbFl4WkRSaU1rbDNUbFprV0dKc1NrOVZhMVpoWWpGU1YxZHVUazlTYkd3MVZHeFZOV0ZIU2taalJXUldUV3BHZGxacVNrdFRSbFp5VDFaV1YySklRbTlXYWtKclZHMVdkRkpyWkdoU2F6VndWVzB3TlU1R1dYaFZhMDVhVmpCV05GWlhOVTlYUm1SSVpVYzVWbUV4V2pOV01GcHpWMGRTUm1SSGNHbFNiR3Q1VmxjeE1FMUhSblJTYWxwWFlrZG9XVmxVUm5kaFJteFhWMnQwYWsxck5VaFphMXByVlRKS1JtTkZNVmhXTTBKSVZrUkdXbVZHY0VsVGJXaFRUVEpvVlZaR1ZtRmtNV1JYVjJ0a1lWSkdTbFZVVmxVeFYwWlplV1ZIT1doTlZXOHlXV3RqTlZaV1duTlhibkJWWWtad2VsWnRNVWRTYkZKeldrZHNWMWRGU2t0V01WcFhWakZSZUdKR1pGUmhNWEJaV1d4a2IxbFdjRmhrUjBaT1RWWmFlbFl5ZUd0aE1VbDNUbFZrVldKR2NISldSM2hoVjBkUmVtTkdaR2xYUjJoVlZsaHdRbVZHVGtkVGJHeG9VakJhVkZacVNtOVdiR1JZWkVkMGFVMXJiRFJXYlRWSFZXMUtWbGRzYUZwaE1YQXpWRlphY21ReFpIUmtSMmhPWVROQ1NWZFhkRk5VTVZsM1RWaEdWMkV6YUdGWlZFWjNWRVp3Umxkc1pHdFdNSEJKVlcxNFQxWXdNVlpYV0hCWFlsaG9WRlY2Umt0a1JscDFWR3hPYVdFeGNGcFhWM1JyVlRKT1IxWnVSbE5oTVhCeVZGWmFkMlZXV2xoa1JFSldUVVJHV0ZsclVsTldNVWw2WVVod1dsWXphRXhhUmxwSFkyczVWMVpzWkd4aE1XOTVWbTF3UjFsWFJYaFhXR2hYWW10d2FGVnFUbE5VTVd4VlVtNWtWRlpzY0hoVk1uQlRWakF4VjFacVZsWk5ibEp5V1ZkNFQxSnJOVmRhUm5CcFVtdHdTVlp0ZEdGVk1WbDRXa2hPV0dKWWFGaFVWVkpTWlZaYVdFMVVVbWxOVmxZMVZXeG9kMVZ0U2xaWGJHaFhZbFJHVDFwVlduTmpWa3B6WTBkNFUySldTbUZYVkVKcllqRmFSMU5zYkZKaVIxSlpWbTE0UzFSR1dsVlNhemxUVFZad01WVnRlRTloVmxwWFkwWndWMkpVUVhoVlZFWlBWakpLUjFkc2FHaGxiWGhaVmtaYVlXUXhUa2RYV0d4c1VqQmFXRlJYZEhkVFZscElZMFpPVjFZd1ZqVldWM2hQV1ZaYWMyTkhhRnBOYm1nelZXcEdkMUl5UmtkVWF6Vk9ZbGRqZUZadE1UUmhNbEY0VlZob1YxZEhlRlZXTUdSdlkwWlZkMVpVUmxoU2JYZ3dWRlphVDFkR1NuTlRiR2hYVFdwV2NsWkhlRXRrUjFKRlZHeG9hRTFXY0hsV2FrSmhVMjFSZVZScldtaFNia0pQVlcwMVEwMXNXbkZUYm5Cc1VtczFTRlp0TlZkWFIwcElWV3M1V21KVVJuWlpha1poWTFaR2RGSnNaRTVoZWxZMlYxUkNWMkl4VlhsVGEyaFdZa2RvVmxadGVHRk5NVnBZWlVkR2FrMVdXbmxXUjNocllVZFdjMWRzYkZkaGExcDJXV3BLUjJNeFRuTmhSMmhUWlcxNFdGZFdaREJrTWxKelYydFdVMkpHY0hKVVZscDNaVlp3UmxaVVJtaFdhM0F4VlZab2ExWXhTbk5qUmxKV1ZrVmFhRmt5YzNoV01XUnlUbFprVTJFelFscFdiVEIzWlVkSmVWWnVUbGhpYkVwUFZteGFkMk14V25SbFIwWnNZa1p3TUZwVmFHdGhSbHAwVld0b1ZrMVhhRE5XTUZwYVpXeEdjbUZHWkdoaE0wSlJWbTF3UjFVeVVsZFdiazVTWWtkU2NGWnRkSGRXYkZsNFdrUlNhVTFyYkRSWmExcHJXVlpLYzFkc1RscGlSbHBvV1dwR1UxZEhVa2xhUmxKWFlrWlpNVmRyVm1wT1ZsbDVVMnhhYWxKWGVHaFdiR1JUWkd4YWNWTnJkRlJTYkZwNVZERmFWMVl5U2tsUmFscFhZbGhDU0ZkV1dtdFhSa3B5V2tkb1UyRjZWbmRXVnpBeFVXc3hWMWRZYUZoaVIxSmhWbXBDVjA1R1dsaE9WazVXVFd0d2VWUnNXbk5YYlVWNFkwZG9WMDFHY0hwV2JGcFBZekZPY2s1V1RtbFRSVXBJVm14amVHVnJOVmRYYTJSVVltdHdjVlV3WkRSWFZteFZVbTVrVlZKdGVGaFdNblF3WVRGYWNsZHFSbGhoTVhCeVdWWmFhMUl4VG5OaVJtUnBWa1ZKTUZac1kzaFdNVWw0WTBWc1YySkdjSEJXTUZaTFZsWmFkR05GWkZSTlYxSklWakowYTFkSFNsWlhia3BWVmxaS1NGVXdXbUZrUlRWWFZHMW9UbFpYT0hsWFYzUmhZVEZhZEZOc2JHaFNSVFZXVm14YWQyVnNXblJsUjNScVRWWktlbGRyV210aFZrNUdVMjFHVjAxV2NGaFdha1pXWlVaa2MyRkdVbWhOYkVwNFZsZHdTMkl4V1hoVmJGcGhVbXMxV1ZWdGVGZE5NVmw1WkVSQ2FFMVZiRE5VYkZaclZsZEtSMk5JU2xkU00yaG9WakJrVW1WdFRrZGFSMnhZVWpKb1ZsWnNhSGRSYlZaSFZHdGtWR0pIZUc5VmFrSmhWa1phY1ZOdE9WZGlSMUpaV2tWa01HRlZNWEppUkZKWFlsUldTRlpYTVV0V2JHUnpZVVp3YUUxWVFYcFdSbFpoWkRGYWRGSnJhR3RTYkZwdldsZDBZVmRzWkhOV2JVWm9UVlpzTTFSV2FFZFdNa3B5WTBab1YyRXhXak5XUlZwV1pVWmtjbHBIY0dsV1ZuQkpWakowWVZReFVuSk5XRkpvVW14d1dGbHNhRzlXUmxZMlVtdDBhMUpzY0RGV1IzaFBZVmRGZUdOR2JGaFdNMUp5VmxSR1lWSXhWbk5XYkZKcFZrZDRkMVpHV21Ga01sWlhWMnhvYTFKRlNsZFVWVkpIVjBac2NsVnNUbGROVlc4eVZtMTRiMVl5U2xWU2EzaFdZbGhvVUZsNlNrZFNNV1IwWWtaT2FFMHdTbUZXYlRGM1VqRnNWMkpHWkZSWFIyaHdWV3RhZDFaR2JITmFSRkpWVFZad2VGVnRkREJXUmxwellrUldZVkpYVWtoWlZWVjRWMFpXY21KR1drNWliRXB2VjFaa05GUXhTbkpPVm1SaFVtNUNjRlZ0ZEhkVFZscDBaRWRHYTAxWFVrbFdiWFJ6VmxkS1NGVnVRbFpoYTFwTVZHMTRZV05zYTNwaFIyeE9WbTEzTVZaWGVHOWtNVlp6V2tWb2FGSnRhRmhaYkZKSFZERndWbGR1VG1wV2EzQjZXVEJrTkZVeVNsZFRiVVpZVmtWS2NsbHFSbUZTTVU1ellrWkthVkl6YUZsWFYzaHZWVEZrUjFwR1pHRlNiVkp4VkZaa1UwMVdWblJsUlRsb1ZtdHNORlV5Tlc5V01VcHpZMGhLVjFaRmNGaFpla3BMVWpGa2RGSnNVbE5XUmxwYVZtdGFZVmxYVVhkTlZtUlhZa2RvYzFWc1pGTlhSbEpZWkVaa1QxSnRkRE5YYTJNMVYwWktjMk5FUWxkV00yaFFWMVphWVdNeVRraGhSbkJPWW0xbmVsWlhjRWRrTVVsNVVtdGtWV0Y2Vms5WmJHUnFaVVphZEUxVVVtaE5SRVpJVmpGb2IxWldaRWhoUjJoV1lrZFNWRlpxUm5OamJIQkhWR3hvVjJKWVozZFdSbHBoVkRKR2NrMVdaR3BTUlVwV1ZtMTRTMUpHV2toak0yaFhUV3R3UmxadGVGZGhWa2w0VW1wT1YyRnJTbWhWZWtwUFpFWk9jbFpzVm1sU01VcDNWbXBDVjFNeFdsZFhia1pVWW01Q2MxVnRkSE5PUmxwSVRsVTVWbUpWY0VsV1YzTTFWMnhaZWxWdGFGWk5SbkJ5V1hwR2EyUkdTbk5hUlRWb1pXeFpNbFl4VWtOV01rbDRWbGhzVkdFeWFGZFpXSEJ6Vm14YWRXTkZaR3RpUmxZMVdsVmFkMkpHU25OWGJteGFUVWRSTUZaVVNrZE9iRXBWVVd4a1YxSldjREpYVjNCTFVqSk5lRlJ1VG1oU01taFZWV3hXZDFkR1pGaGxSazVUVFd4S2VsWXlOVXRYUjBwV1YyNUdWVll6VW1oVmFrWmhVMGRXUjFSc1ZtbFNia0Y0VmxaYWIyRXhXWGhUYms1cVVteEtWMVpyVm1GaFJtdDVZek5vVjAxWFVubFViRnByVlRKRmVsRnNjRmROVjFGM1dWUktTbVZXVm5WVWJHaFlVakZLV2xkWGVHOVZNVnBYVm01R1VtSlZXbFZWYlRFMFpWWlplVTVYZEdoU2JIQXdWbGQwYzFkc1dsaFVWRVpYWVd0d1RGWXhXa2RqYlVaSFkwZDRhRTB3U2xGV01uaFhZVEZSZUZOdVVsTmhNbEpUV1d0a1UyTkdXblJrU0dSWFlrWnNORmRyVWxOaFZURnlZa1JTV21FeGNISlhWbHBMWXpGa2MxUnNjR2xTYkhCdlYxZHdSMVV4WkVoVmEyeGhVbXhLV0ZscldscE5WbVJ5Vm0xd1QxWnNiRFZWTW5oaFlXeEtXR1ZIYUZkaVIxSlVXa2Q0WVdOV1RuSmtSbEpUWWtad05WWkVSbUZXTVZsNVUydHNVbUZzY0ZoWmJHaERVMFprVjFkdGRGaFNhM0I1VjJ0a2IxVXlSalpXYm1SWFZucEJlRlZYYzNoV01XUlpZVVpvYVZJeFNtaFdiWEJEVmpBMVIxZHNhRTlXYXpWWFZGZDBkMlZXVW5OWGJrNVlZbFZXTkZrd1pHOVdNREZIWTBod1YySkdjRkJaZWtaUFkyczFWMVJ0YkZoU01taFpWbTE0YW1WSFZuSk9WbVJYVjBkU1QxWnRNVk5qVmxaeVZtMUdXRkpzV25oV1J6QTFZVEpLU0dWR2FGZE5ibEYzV1ZkemVHTnJOVlpoUm5Cb1RWaENNbFp0Y0VKa01sWkhWRzVHVkdKSFVsaFphMVozVTFaYWNsVnJaRmhpVmxwSVdUQldjMVpIU2xaWGJGSmFZVEpvUkZwSGVHRlNNWEJGVld4U1RsWXhTa2xXYWtvd1lURmtTRk5zV2xoaWEzQldWbXhhUzFOR1ZYZFhiVVpyVWxSV1dGWkhNVzlVYkZwWVQwaHNXRll6VW1oWlZFWmhaRVpPYzJKSGFGUlRSVXBYVjFkMFlXUXlWbk5YYmxKT1ZsZFNWRmxyV2t0bGJHUnlXa2hPVjAxWFVrZFZNblF3VmpBeFYyTkdhRmRoYTFwWFdsVmFhMk15UmtkVmJXeFRUVEpvTWxac1VrTldNbEY0V2tWa2FWTkZjRmxaYlRGVFZsWldkRTVWVGxOTlZtdzFXa1ZTUTJGRk1WWmlSRTVWWWtaYWNsWnNaRXRTTWs1SlUyeGtVMDB5YUc5V2FrSnJWVzFXZEZSclpHRlNNbmhaVldwS2IxWnNXbk5oU0dSU1lsWmFTRlpIZEd0V1IwcElaVWM1Vm1GclNtaFdhMXBoWTFaT2RFOVdaR2xTTVVwYVYydFdhMDFIUmxaTldFcHBVa1pLV0Zsc1VsZFRSbHBZVFZWMFYySkhVbnBaVlZwM1lVVXhXVkZZY0ZkU2JIQm9XVEl4VW1WR2NFbFZiWFJUVFcxb1VGZFdVazlSTVU1WFdrWm9hMUpyTlZaVVZscHpUVEZTVjJGRlpGZE5hMVkyV1ZWa1IxZHNXa1pYYWs1WFVsWndNMVZ0ZUd0ak1YQklaRVprVGxORlNrdFdiR040VGtaUmVGZFlaRTVXYkhCWlZqQm9RMWRHYkhOaFJ6bFhVbXhaTWxWdGREQmhNVXB6WTBSR1YxSXphRkJaVm1SR1pVZE9SMk5HYUZkTk1VcDVWbXhTUzFReFNYaFhibFpUWWtVMWIxUldhRU5sVmxwSFYyMUdhMDFzV2xoV01uaHZZVEZLUmxOc1pGVldWa3BJVmpCYWMyTnNWbk5VYkdST1ZsZDNNbGRXVm05a01XUnpWMWh3YUZKWWFHaFZiWGgzVTBacmVXTjZWbGROVm5CNlYydGtOR0ZGTVZoUFZGWlhZbFJHTTFWcVJuTlhSa3BaWVVab1dGSXlhRmxYVnpFd1pESkdSMVp1UmxWaVJUVldWRlprTkZac1ZuUk9WM1JYVW14d2Vsa3dhRzlXYXpGMVVXeFNWMkZyUmpSV2FrWmhZMVphYzFkck5XbGlSWEExVmpGYWEwNUdVWGhUYmtwUFZtMVNhRlZ0TlVOalJsWjBaRWhrVkZac2NEQmFSV1JIVm1zeFYySkVVbGhoTW1oUVZqQmtTMWRYUmtkaFJsWlhWbXR3VkZkc1dtRlpWbVJHVFZaV1ZtSlhlRTlXYlhoYVRWWmFXR1ZIT1d0TlZsb3dWVEo0WVZkSFNraGhSbWhhWWtaS1NGWkVSbmRXYkdSMVZHMXdWMkV6UWpaWFZFSnJUa1pWZVZOc1pGUmlWVnBaVm10V1MyTnNiSEZTYlVaVFRWVTFlbGxyV2t0aFZrbDRVMnh3VjJKVVJUQlZla1pUVWpGa2MxWnNUbWhsYlhoVlZrWmFZV1F3TVZkV2JsSnNVbFJzYjFadGVIZFhSbXQzVjI1a1YwMXJjRlpWVm1odlZteGFSbGRzUWxkaGEzQk1WV3BHYTJNeVJraGhSM2hwVjBkb1lWWnRkR0ZaVm14WVZWaG9WV0V5VWxsV01HUTBZekZXY1ZGdFJsaFNiRXBaV2tWb2ExWkdXbk5qUld4YVRVWndVRlpxUmxwa01WcHhWbXhrVjAweWFGRldNVnBoV1ZkTmVWUnJhR2hTYmtKUFdXMHhibVZzV2xoalJXUnJUVlUxU1ZVeWRHdFdWMFkyVm14b1YwMUdXa2hVYkZwaFpFVXhWVlZ0YUdobGExcGFWbXhhYjJNeFdsZGFSV2hzVW14YVdGUlZaRk5rYkZweFVtNU9hbUpJUWtoV1IzaHZWakpLV1ZvelpGZFNiSEJvVmtSS1IyTnJNVmRoUjNoVVVqTm9XVlpHWkhkV01WWkhWMnRXVTJKVlduSlZha1pMVW14YVNHVkhkR2hXYkhCSFZtMXdUMVl5U2xsUmEwNWhWbFp3VEZacVJrOWtWazV6WVVkc1UySnJTak5XYlhCRFZqRk5lRlJzWkZoaWExcFZXVmQ0UzFsV1duUk5WazVVVm14YU1GcEZaRWRoVmtweVkwUkNWMVl6VFRGV01qRkxWbFpLZFZkc2NHaGhNWEJ2VjFSR1lWSXlVa2RUYms1aFVsUldiMXBYZUZwTmJGbDRWV3RPVjAxcmJEUldiR2h6VmtkRmVXRkdaRnBYU0VKNlZtMTRZV1JYVGtaYVIzUnBVbXhaTVZkc1ZtRmtNa3BIVTI1T1dHSnRlR0ZVVldSU1RVWmFWVk5yWkU5aVJYQldWVmQ0YTFZeFNsZGpSRXBZVmpOQ1RGVnFTazVsUmxKMVZHMW9VMDF0YUZaV1YzaFhaREZrUjFwR2FHeFNhelZVVkZkNFMyVnNXWGxPVlhSWVVqQndWMVl5TlVkV1ZsbDZWVzFvVm1GcldtaFZNR1JYVWpGU2MxWnRiRk5pYTBZMFZteGFZV0l5UlhoWFdHaFVZbXMxY1ZWdGVFdFdNVnB5Vm0xR2FGSnRkRFZaZWs1dlZqQXhXRlZ1YkZWaVJuQnlWbFJLUm1Wc1JuTmpSbVJPVmpGR00xZFdVa3RUYlZaWFZtNVdWV0pIYUZsVmFrWkxWMnhrV0dWSE9WWk5WbkJZVm0wMVIxVnRTbFpYYkZaV1lsUkZNRnBXV2xwbFZUVllaRWRvVTJKSVFYZFdiR1F3WXpGa2MxZHNhRlZXUlZwWVdWZDBkMVJHV25OWGEzUlhWbXRhZWxrd1pEUmhSVEIzVTJ4S1YwMVhhRE5WZWtaU1pVWk9kVlZzVG1oTmJFcFVWMWQwYTFVeFVYaFZiRnBYWW0xU1dGbHJXbk5PUm1SeVZXdE9hRlpVUmxkV2JYQlBWbGRLUjFkdVNsZE5SMUpNV1RJeFQxTkdTbk5XYkdSVFYwVktWbFp0ZUZkWlZteFlWR3hrVTJKck5XaFZiRkp6VjBac2NsZHNjRTVXYlZKNVZtMHhNRlJzU1hkWGEyeFdUVzVTYUZsWGVFdGtSMVpJVW14a2FWSnVRWHBYYTJRMFYyMVdWazFXV210U2F6VlBWbXhTVjA1V1duSmFSRkpYVFZac05WVXlkSE5WYlVwVllrWm9XbFl6VWt4Wk1uaGhVMFV4VjFwSGRGTmhNMEkxVmpKMGEySXhWWGxTYWxwWFltMVNXRlp1Y0VOTk1WSnpWbFJHVTAxWFVscFpWVnBoWVVVeFJWWnRhRmRpV0VKRVZtcEJNVkl4WkhOaFJUbFhZWHBXV0ZaR1pEQmtNbFpYVlc1T1dHSnJOVmxaYTJSVFUyeFdXR1JIT1ZkTlJFWklXVEJvZDFZd01VaFZiRkpXWWxSR1ZGVXdaRTlUUjBwSFZHMXNVMDB4UlhoV2JURTBZVzFXU0ZadVNrOVdiVkpZVmpCa1UxUXhXblJOVms1cVZteGFlVlp0TVVkWFJrcHpZMGhvVjFKNlFURldiWGhMWkVkV1IyRkdaRTVpYkVsNlYxZDBZVk15VG5KT1ZsWlRZa2RTVDFsdE1XOU5iRnAwWTBWMFZFMVZjREJXUjNSaFlWWktkR0ZIT1ZWV2JGb3pWVEZhWVdOc1ZuSmFSbWhwVm14d1NWZFVRbGRqTVZwSVUyeG9hRkpzU2xaV2ExWmhWRVphYzFkdFJsTk5WbkF3VlcweE1GUnRSWGhqUld4WFlXdHJlRlpVUmxOak1YQkdZa1pLYUdWdGVGbFhWM2h2VkcxV1IxZFlaRmhpU0VKelZtcEdZVk5XVVhoYVJ6bFZZa1p3V1ZRd2FITlhSbGw2Vlc1R1ZXSkdjR2hXYWtaclpGWlNjMkZIYUdobGJGcFlWbTB4TkZsWFVYbFNhMlJZVjBkU1dGWnJWbUZYUm14eVYydDBiR0pIVW5sV2JGSkhZVVpLVlZGcVRsWk5ibEYzVm1wQmVGWXlUa2RoUm1Sb1lURndXRmRzVm1GaE1sSlhWRzVLVDFadFVuQldiWFIzVGtaYWMxcElaRlJOYTJ3MFdXdGFhMVp0U2toVmJHeGFZbFJHVkZacVJsZGtSVEZWVVdzNVUySkhkekZYYkZaclRVZEdTRkpxV2xOaVIzaFlWbTV3VjJWc1duTmFSWFJUVFdzMVNsVXllR3RWTURCNVlVYzVWMkZyU25KV1Z6RlhaRVpTY2xwSFJsTk5ibWhhVmxkd1MySXhXbk5YYms1b1UwZFNVMWxzV21GVFJscElaRWQwVjFZd2NFbGFWV2hEVm0xS1dWUllhRnBoYTFwVVZqQmtWMUp0VWtkYVIyeFRUVlZ3WVZacldtRmlNbEY0Vlc1T1dHSnJOWEZWYlRGdldWWnNWVk50T1ZWU2JWSllWakowTUZReVNsWmpSV2hhVmxad00xbFZWWGhYVmtaWlkwWm9hVkl4UlhkV2FrbDRWakZhY2s1V1pHaFNNMUpVV1d0YWQyUnNaSE5hUkVKYVZtMVNXRmRyV2xkVmJVcFZZa2hHVlZac2NIcFVWRVpUVmpKR1JscEdXazVoTVZreFYxWldhMUl4V1hsU2JrcFBWMFp3WVZac1duZGxWbkJYV2tVNVQySkZjSHBaVlZwclZHeE9SbE5yY0ZkTlZuQllXVlJLU21WR1ZuVlViVVpUVm01Q1ZsZFhkRmRrTVdSSFZXeGtXR0p0VW05VmJURlRWMFpaZVdONlJtbFNiSEI2VlRKd1IxWXhXWHBoUm1oYVZsWldORlpxU2s5U01rNUhZVVprVGsxVmNEVldiWGhUVXpGT2RGWnJaRmRpYXpWdlZXcE9RMk14YkZWUmJtUldVbXh3V1ZSVmFHOVdhekZZVlc1d1dsWkZOWEpXYWtwTFYxWldjMkZHVmxkTk1VbDZWbXBDWVZkdFZsaFdhMmhRVm0xU1QxWnNZelJsVmxwMFRWUlNhVTFXYkRWVmJHaHpWbTFGZW1GR1pGcFdNMUpvVmxWYWQxSXhaSEphUjNCT1YwVktTbGRYZEdGVU1rWllVbGhrV0ZaRmNGaFpiRkpIVFRGV2NWSnVUbGROYTNCSVYydGFVMWRHU1hsaFNHUlhWak5TYUZwRVJtRlNNa3BKVkcxR1UxSnJjRmRXUmxwaFpESldSMVp1VW10U1JVcFlWVzE0ZDJWc2JISlZiR1JhVm10d1dWWlhkRzlYYkZwWFZtcFNWMDFHY0ZoWk1qRkxVakZrY2s1WGJHbFNXRUl5Vm1wR1lXRXdOVWRWV0doVVltdHdVRlp0TVZOaFJsWjBUbFZPYWxKc1dqQmFSV2hyVmtaYWMyTkVRbUZTVjFKSVdWUkJlRmRHVm5KaVJtUnBWMFpLTmxadGVHdFRNVTVIVm01V1VtSkdjRzlaVkVaM1ZGWmFTRTFVVWxwV01EVjZXVlJPZDJGR1NYbGxSVGxYWWxSRmVsUldXbUZYUjFaSVQxZDBUbFpzY0RaV01uUlhZakpHUjFOdVVtaFNiV2hoV1d0YVMxTkdXbFZTYkU1WFlrZFNNVmRyV2s5V01rVjZVV3BhV0ZaRlNuSlVhMXBhWlZaS2NWZHNaR2hpU0VKYVZtMXdUMVV5UmtkYVJtUmhVbGRTV0ZSV1ZURlhiR3h5V2tjNVZrMXNXakJhVlZwelZqSktXVkZzUWxkV1JWcHlWV3BHZDFJeGNFZGhSMnhvWld4YVdsWnJXbXRsYXpGWFZHdGtXRmRIZUU5V2JHUlRWakZTVjFwR1RsUlNiRlkxV2xWa1IxWXdNWEpqUmxwV1lsaENhRlpzV21Ga1JsWnpZVVp3YkdFelFrMVdWM0JIWVRKU1IxTnVUbFZpV0dod1ZqQmtiMWRXV25GU2JVWnBUV3hHTkZVeGFHOVhSbVJJWVVjNVZWWkZjRlJXTVZwell6RmFkRkpzYUZOaVJYQmFWMnRXYjJFeFdrZFhiazVxVWxkNFlWUlZXbmRWUmxweFVteHdhMDFXY0hoV2JYaHJWakF3ZVdGR1JsZE5WbkJvVjFaa1RtVldVbkpoUjJoVFltdEtVRmRYTUhoaWJWWnpWMnhvYWxKWFVuSlVWbFp6VGxaV2RHUkhkRmRXTUZreVZtMXpOVmR0U2toVmJrWmhWbFp3YUZwRlZYaFdWbFowWVVVMWFWSldhM2RXYkdRMFlqSkplVkpzWkZSaWJFcHZWVzE0ZDFsV1duSldibVJYVW14c00xWXlOVTloTVVsNFYydGtZVkpYVWpOV1IzaGhZekZrV1dOR1pFNWliRXB2Vm10U1MxSXlUbkpOVm1Sb1VqTm9WVlZxVG05WFZscEhXWHBHYVUxck5YcFdNblJYVlRKS1ZsZHVTbGRpV0ZKb1dsZDRhMk5zWkhWYVJtUk9WbTEzTUZaWE1YZFVNVmw1VW01S1ZHSlhhRmRVVjNCSFZURndWMWRzVG1waVIxSXdXVlZhVDJGWFJYZGpSa1pYWWtkT00xUldXa1prTURGWlZHeG9hV0V4Y0ZaWFZ6QXhVVEpOZUZadVVtcGxhMXBWVm0xNFlVMUdjRVphUldSb1ZtdHdlVmt3VWtOV01WbzJVVlJHVjAxdWFHaFZiWGhyWTFaU2MyTkhhR2hOV0VKMlZtMXdRMVp0VmtkWGJHUlhZbXhLYjFWc1VsZGlNWEJZWlVaa1RrMVdjREJVVldodlZHeEpkMVpxVWxwaE1YQnlWbXRhYTFOSFZraFBWbHBwWW10S05sWnRNVFJaVjA1elYyNUthMUpzV2xSWmEyaERWMnhrYzFadGRGTk5hMXA1VkZaYWExZEhTblJsUm14YVZrVndWRnBIZUdGVFIxWklVbXhrVjJFelFsZFdWbVEwWVRGWmVGTnNaR3BTUlhCWlZtcE9RMVJHVm5GVGF6VnNVbXhLTVZaSE1XOVZNa3BKVVc1a1YySllRa3haYWtaclVqRndSMkZIZUZObGJYaFhWMWQ0WVZsV1RrZFhXR2hvVWpOU1dWVnFRbmRUYkZaWVRsVjBWMVpzY0hwWk1GSlBXVlphYzJORVRsWmlXR2hvVm14YVMyUkhSa2RhUjJoT1RVVlpNRlp0ZUdGWlYwbDVVbGhvV0ZkSGFGVlpiWE14WTFaV2RHVkZkRmROVm5CNVZtMHhSMkZHU25Sa1JGWmFaV3MxZGxacVFYaFhSbFoxWWtaV2FWSnVRbmxXYkZKTFVtMVdjMUp1VG1wU2JWSndWbXRXU21Wc1pITldiWFJVWWxaYVdGWXlOVmRXVjBwSVlVaENXbGRJUWxoV01uaHJWMGRXU0U5V1drNVdia0paVm0wd01WSXhWWGxUYkZwWVlrWmFWMWxzYUc5bGJGSnpWMjVrVjJKVldrbGFSVnByVkd4S1JsZHNhRmhXUlVwb1dXcEdhMlJHU25WVGF6bFhVbFJXV1ZaR1ZtRmtNV3hYWTBab2JGSlhVbkZaYkZaaFUwWmtjbHBIT1doU1ZFSXpWVEo0UzFZeVNsVlNhazVXWVd0YVlWcFdXbGRqTVhCSFZtMXNhR1ZzV2xwV01XUTBZVEExUjFkclpGWmlSMUpZV1cweFUxZEdiSEpYYms1UFVtMVNlVlpYZUU5aFJscFZVbTVzV21FeFNsQldiR1JMVWpKT1NWTnNaRTVTTVVwTlYxaHdSMVF5VG5KUFZtUllZbGRvVDFadE5VTmtiRmw0V2toa1UwMVdWalJXTVdodldWWk9SMWRzV2xwWFNFSjZWbXRhYzJOc2NFVlVhelZYWWtoQ1NsZHNWbUZaVmxGNFYxaGtXR0V5ZUZkVVZ6VlRZVVpzV0dWRmRGaFNiRnA2VjJ0YVYxWXdNSGRUYTJ4WVlUSlJNRmRXWkU5V01WSjFVMjEwVTJKRmNGVlhWM1JoWkRBMVYxZHJWbE5pVlZwWVZGWmFjMDVXVlhsa1NFNVdZbFZ3VmxscldtOVhiRmw2Vld0NFdrMXVhR2hWTUZWNFZqRndTR1JHVG1oTk1Fa3hWbXBLTUdFeVNYaFdXR3hUWVd4d1dGbHRNVk5YUmxwMVkwVk9UazFXU25wV2JGSkhWVEF4V0ZWc2NGcFdWbkJvV1ZWVmVGSldXblJoUm1ScFYwVktSVlp0Y0VKTlZrbDRXa2hPYUZKVWJGaFdhMlEwVjJ4YVdFMUlhRlpOVlRWWVdUQmFZVmR0Vm5OWGJHaGFZa1phV0ZScldscGxWMDVHVDFaa1RsSkZXa2xYVkVKdlpERlpkMDFWYUZaaVJrcFhXV3hTUjFaR1ZYZGFSVGxVVWpCd1NGWkhNWE5WTURCNFVsaG9WMkpVUlRCWlZ6RlhVbXN4Vmxkck5WZFdNbWhWVjFjeE5GTXhXa2RpUm1oc1UwZFNXVlZ0TVRSbFZtUnlXWHBXV0ZKc2NEQmFWVnBoVm0xS1ZWWnVTbHBXVm5CTVdrVmtWMUl5UmtkYVJUVnBZa1ZaZWxZeFdtdGxiVlpJVkc1S1QxWnNjRzlWYlRWRFlqRlNWMkZGVG14V2JIQjZWbGQwTUZaRk1WWmpSRUpYVWpOU2FGWkhlR0ZrUjBaSFlVWldWMUpWY0UxV1ZFWmhXVmRPYzFadVNtRlNiV2h3Vm0xNGQxTldaRlZSYkdScVRWWndTVlV5ZUc5aFJrcHpVMnhhVjJFeFdqTmFSM2hoWXpGa2RGSnNUazVXYmtGM1ZsY3dlRTFHVW5OWFdHaFVZa2Q0V0ZsWGRIWmtNV3hWVW01T1YwMVZOWGxYYTFwVFlWWktjMk5HWkZkaVZFVXdWbTB4VjFJeFpGbGFSbWhwVTBWS2VsWnRjRWRaVms1WFZWaG9ZVko2YkZaWmExcDNWMVpSZDJGSVRsaFNiR3cyVmxjMVIxWlhTa2RqUjJoWFlXdGFjbHBHV2xOak1rWklZa2RzYUUxSVFsbFdha1pyVFVac1dGVlliRmRpYXpWWldXMTRTMVF4V25OYVJrNVhVbTE0ZVZZeWREQmlSMHBJVlc1c1dHRXlhRkJXYWtGNFYwWldjbHBHV2s1aWJFWXpWbTF3UW1WR1dYbFVhMlJvVW0xU2IxbFVSbmRXUm1SelZtMTBWRTFWYkRSWk1GWnJWbTFLV0dGRk9WZE5SbHBNVjFaYVdtVkdjRVZWYldoT1lUSjNNRmRYZEdGaE1rWnpVMjVTYUZORmNGZFpWM1JMWVVaYVJWSnNUbGROVjFJd1ZXMHhOR0ZXU25Sa2VrWllZa1phY2xSVlpFZFNhekZYVjIxc1UxSlVWbGRYVjNSaFdWZE9jMWR1VG1GU1dGSlVWRmR6TVZOc1ZYbGxSM1JXVFVSQ05WbFZZelZXTWtaeVUyNUtWMVo2UmxoYVJWcFRZMnh3U0ZKc1RrNWliV2hoVm14a2QxTXlTWGhYYms1WVltczFiMVV3WkZOVk1XeHpWMjFHVkZKc2NFbGFSV1F3VmpGSmQyTkZiR0ZXVjAweFZtMHhSMk5zVG5SaFJtUm9UVmhDYjFkVVJtRlVNbEpHVDFaa1lWSXllRlJVVmxaM1dWWlplV1JHWkdoTlJFWkpWVzE0WVZSc1pFWmpTRUpXWVRGd1RGWXdXbk5qTVZaeldrWlNVMkpJUWxwV1JscFhUVVpaZVZOcmFGWmlia0poVm14YWQwMHhiRlpXV0doWVZtdGFXbGt3V210Vk1rcEhZMGM1V0dFeFNraFhWbVJUVWpGT2RWTnRhRk5OTVVwVlYxZDBZV1F5VW5OYVNFNWhVa1ZLWVZadE1WTmxiR1J5WVVVNVYwMXJjRmRXTWpBMVZsWmFjMk5JY0ZWV1JWcFVWbXBLUjFKc2NFZGFSVFZvVFRCSk1WWXhVa05aVjBsNFYxaHNVMWRIYUZsWlYzTXhWMFpXYzFkdVpGZE5XRUpYVmpJeE1HRnRTa2xSYTJ4YVRVZFNlbFpyV2t0V2JVNUdZMFprYVZaRlNUQlhiR1I2WlVaWmVGcEdiR2xTYkVwdlZGZDRTMWRXWkZkYVJGSlVUVmRTU0ZaWGVHdFhSMHAwVlcwNVZtSlVSbFJXTUZwYVpWZE9ObEp0YkZOaE0wRjRWbFprTUdJeFpFaFNXR2hxVW10S1lWWnRlSGRUTVhCWVRWVmtWRkpVYkZoWGExcHJZa2RGZDJFelpGZE5WMUl6VlhwR1VtVkdUbGxoUm1ocFlrWndXRmRYZUc5aU1WcFhWbTVHVTJFelVuSlVWbHAzVTBaWmVVMVZaR2hOUkVaNlZqSjRiMVl3TVhWaFNGcGFWa1ZhVEZWdGVFOWpNWEJIVm14a1YyRXpRa3BXYlhCRFdWZE5lVlJ1VGxkaWF6VldXV3RrVTFReFduUk5SRkpzVm14d01GUldVa05VTVVwellrUk9WVlpzV25aV2JURkdaVzFHUjFwR2NGZE5NVXB2Vm14V1lXUXhTWGhhU0VwaFVqTkNUMVl3Vmt0VGJHUllaRWRHVlUxcldsbFZiR2hyVjBaYVJtTkdhRnBpUmtwSVZGUkdWMk5XU25WVWJHUk9ZVE5DU1ZZeWRHRlZNV1JIVTFoc2FGTkhVbGhXYWs1VFlVWndSVkp0UmxOTmEzQktWa2N4UjFVeFNuSmpSbVJYVW14d2FGcEVTbGRTTVZwMVZXMTBVMUpWY0ZsV1Z6RTBaREF4UjFkc2FHeFRSVFZoVm0xMGQxZFdXa2RWYTJSWFRWWndSMVZ0Y0ZOV01rWnlZMFpDVm1KVVJreFZha1pyWkVkS1IxUnJOV2xXTWxFeFZtMXdSMWxYUlhkT1ZXUldWMGRvVlZsdGRIZFZSbHAwVFZaT2FGSnNXakJVYkZaUFlXeEtjMWRxUW1GU1YyaHlWbXRhWVdNeVRrVlJiVVpUVmpGS1NWWnFRbXRUTVZsNFdraE9hVkp0VW5CV01GcExUV3hrVjFWclpGUmlWbHA2VlcwMVYxVnRTa2RqU0VKWFlURndhRlZzV21Ga1IwNUdXa1p3VjJKV1NraFdSbHBoVmpGYWRGTnNhR2hTVkd4WVdXeG9VMDB4VW5SbFIwWnFWbXMxVmxWdGVHdFViRnB6WWpOa1YxWjZRWGhXUkVwSFl6Rk9kVlZ0ZUZOaVYyaG9WbTEwVjFsWFJrZFhhMXBZWW1zMVdGbHJaRk5OUmxaMFRWaGtWMDFyVmpaVlZtaHJWMGRGZUZkdGFGZFNSVnBVV1hwR2ExZFhSa2RWYkdoVFRXMW9XbFl4V2xOVE1WWnlUVlZrV0dKR1dsVlpWRXBUVmtac1dXTkZaRmhpUm5CWlZGWmpOVlpyTVhOWGFrSmhWbFp3ZWxacVNrdFhWa1p6VVd4a1YxSldjSGxXVjNCSFpERkplR05GWkdoU01uaHZXbGQ0WVZkc1duSlhiWFJzWVhwR1dGWkhkR3RYUm1SSVpVVTVWMkpIVWxSV2FrWlRWakZ3UjFSc1VsTmlSbGt4VjJ4V2ExSXhXWGROV0VwcVVteHdWMWxzYUVOaFJscHpWMjFHYTFKc1ducFpWVnAzWWtkRmVsRnJNVmRXTTBKSVdWUktVMUl4VG5WVWJGWnBWMGRvZDFacVFtdGlNV1JYVjI1R1UySlZXbkJVVjNoSFRrWlZlR0ZIT1ZoU2JWSkpXVlZqTlZaV1drWmpSbEpYVFZad2VsbDZSbUZrUmtwellVWk9hVkpZUW1GV01uUlhZakpGZUZkclpGaGlhelZ4Vld4a05GbFdVbFpYYm1SV1VteHdlRlZ0ZUhkaE1ERlhZMGhvVjJKWWFISldha0YzWlZkR1IxSnNaRTVXYmtKdlZqRmFhMVJ0VmxkVmJrcG9VakpvVkZsdGRFdFZSbVJZVFVob2FXSldXbnBXTW5odllXeEtXRlZ1U2xWV2JGcDZWR3hhVjJSSFVraGtSbVJYVFVacmVWWnRNWHBPVm1SMFUydG9WbUpyV21oV2JGcDNZVVp3UmxaWWFGZFdiRm93V1ZWVk1XRldTbGRoTTJSWFlrZFJNRmxxU2twbFZrcHpXa1pTYVdKRmNIWldWekUwWkRGc1YxZHVTbGRpYlZKWVZXMTRjMDB4V1hsT1ZUbG9UVlZzTkZZeWRHdFpWa3BZVldwT1YxSXphR2haZWtaclYxZE9SMXBGTldsaVJYQjJWbTEwVTFNeFNYbFVia3BPVm0xU2IxVnFUbTlXVmxaeFZHMDVXRlpzY0VoWFdIQkhZVlV4Y2s1WWNGZE5ibEpZVmxSS1MxWnNaSFZUYkdScFYwWktiMWRzWkRSaE1rNXpXa2hXWVZKdFVrOVdiVEV6VFVaYVdFMVlaRlZOVm13MVZXMDFTMVpIU2xoaFJtUlZWak5DU0ZaVVJuZFdNV1J6Vkcxd2FWSXhTWGRYVmxaaFZESkdXRkpZWkdwU2ExcFlXV3RrVDAweFVsZFhhMXByVFVSR1dsWkhlRzloVjBWNFkwWmFXRlo2UVhoVlZFcE9aVVphZFZWdGNHeGhNWEJXVm0weE5GbFZNVWRqUlZwaFVsZFNiMVp0ZEhkbFZtdDNWV3RPVjAxV2JEWldSbEpIVmpBeGNWSnJlRmRpUm5CTVdrWmFhMk15VGtoaFIyaE9WMFZLTWxacVJsTlNNV3hYVTFoc1ZtRXlVbFZaYlhNeFlVWldjMVZzWkdsTldFSlpXbFZhZDFSdFNrZGlSRkpYVmpOU1VGWnFRWGhqYlVwRlZXeGthVkl5YURaV2JYUnJVbTFXV0ZKclpHRlNia0paVlRCV1MwNXNXblJOVkZKYVZqRktXVlpIZEdGWlZrbDZWVzVDVm1KWWFHRlVWbHByWXpGYWRGSnRkRTVoTTBKSlZsUkpNVlF4WkVoVGJsSnNVakJhVmxac1pGTlZNVkpXVjIxR1YxWnJOWGxYYTFVMVlWWktXVkZzWkZkV2JWRXdXVlJHV21WR1RuTmFSM0JUVWxoQ1dsWnRjRTlSTVZKSFZtNUdWR0Y2Vm5OVmJYaExUVlphU0UxWE9WWk5SRVl3V1ZWYVlWWXhXWHBoUm1oaFVrVmFjbFZxUm5kU01rWklaVVpPYUdWc1dsWldhMXByVGtaTmVWWnVUbGhYUjNoUVZteG9VMWRXVm5GUmJtUlhUVlpzTlZSc1ZtdFdNVnB6WWtSYVYxWjZSblpXYlRGSFkyeGtkR0ZHV2s1U01VcFpWbGR3UjFVeVRYaFhibEpwVW1zMWNGbFVRbHBOUmxwMFpVZEdXbFl3YkRWVmJHaHZWMFprU0dGR1ZscGlXRTE0V1RGYVYyUkhWa1prUm1ST1ZtNUNOVlp0TUhoU01rWkhVMjVTYTFKR1dtRmFWM014Wkd4YWNWRllhRmhTYkZveFdXdGFWMkZXU25WUmJteFhZa1pLVEZWdE1WZGpNVXAxVkcxd1UySldTbEJXYlhCSFVqQXdlRnBHWkZaaE0xSlZXV3hhWVZkR1duUk9WbVJYVmpCd1NWbFZXbk5XYlVaeVYydDRWMDF1YUhKV01HUlhVMFU1VjFkck5WZGlhMHBhVm0wd2QwMVdTWGhXYmxKVVlrWndXVmxyV21GV01XeHpWV3RhVGxKdVFsaFdNbmgzWWtaYVZWWnNiR0ZTVjFKMlZsUktTMU5XUmxsYVJtUnBVakZHTTFkWWNFZGhNazE0V2toT2FGSnNXbGhWYkZwM1YxWmtWMXBFUW10TlZrcElWakkxVDFkSFJYcFZiR2hYWWxoU2FGcFhlSEprTVhCRlZXMW9VMVpGU1hwV1ZFbzBVekZaZDAxV2FHaFNSVFZYV2xkMFlWVXhjRlpYYXpsclZteGFlbFpITVc5VWJVcEdZMFpXVjAxWFVYZFpWRVpXWlVaV1dXRkdXbWxTYmtKWlYxY3dlRlV4WkVkaVNFcFlZbXMxVUZWdE1WTmxWbHBZWkVVNWFGSnNjRlpWYlhoclZqSktXVkZzUWxkaVIxSk1WV3BHYTJSV1RuTmFSVFZUVFZWd1RsWnNaSGRTTWtWNVZGaG9XR0pyTldoVmJGSlhWa1pTVjFadVpGZGlSbkF3V2xWYWExZHNXblJsUm14WFVqTm9jbFpVU2t0ak1XUjBZVVphYVZkSGFFMVdha0poWXpKT2MxcElUbXBTVkZaWVdXeGFTMDVXV25STlNHaHJUVlpHTkZZeU5VOWhWa3BIVjJ4a1ZWWjZWblpaVlZwelYwZFdSbVJHYUZOTlZuQktWMVpXWVdFeVJsZFRXR2hVWWtaYVdWbFVTbEpOUm1SWFdrVTVWMDFXU2pGVk1qRXdWVEpLUm1OR1ZsaFdNMUpvV2tSQk1WWXhaSEpXYkU1cFZsWndXVlpHV21Gak1EVlhWbGhzYTFORk5WZFpiRlpoWld4cmQxZHRPVmhpVlhCSldWVldVMVpyTVVkalNFcFhZV3RhY2xwRlpGTlNNa1pIVkcxb1RrMUZhM2hXYWtaaFZqSkZlVlZZYUZkWFIxSlBWakJhWVdJeFZuUk5WRkpZVW0xNFdWcEZWakJYUmtwelYxUktWbUpZVFRGV1ZFRjRWMFpXY1ZKc1pGZGxhMVYzVm14U1FtUXlWa2RVYms1VFlrZFNXRlJVUWt0U1ZscDBZMFZLVGxacmJEUlhhMmhQWVVaS1ZXSkdhRnBYU0VKWVZqQmFZVkl4Y0VWUmJYUk9Za1p3V1Zac1l6RlVNV1JJVTI1S1QxWnRlR0ZaYTFwaFYwWlNjbGR1U210TldFSkpWREZhYTFSc1NrWlhhMnhZVmtWS2RscEVSbHBsVms1eVdrZHdVMkV3Y0doWGJHUXdXVlpXUjJFemJHcGxhMXBZVkZaYVMwMUdiSEpYYlRsV1RVUkdNRmxWV25kV01rcFZVbFJDV2xaNlJsaFZNRnBoWkZaT2NrOVdaR2xXYTNCYVZtMXdRMkV4VlhoVldHaFlZbXhLVDFadGN6RmpWbHAwWlVkR2JGWnNjREJVVmxaclYwWktjbU5JY0ZkTmFsWjJWbXBHUzA1c1JsVlNiSEJYVWxoQ1RWWlVRbXRXTVVsNVVtdGtZVkpVVm5CWmExWmFaV3haZUZkdGRHeGlWbHBKVmtjMVMxUXhXbk5qUnpsV1lsUldSRmxxUmxOV01rWkdWRzE0VjJKSVFqWldiR1F3VFVaYVJrMVdXbXBTUlVwWVZXcE9VMkZHYkZkWGEzUnJVbXhhZWxscldtRlViRXB6WTBVeFYxWXpVbWhYVmxwS1pVWndTVlZ0ZEZOaVJuQjNWbTB4TkdReFRsZGFSbFpTWWtkU2NWUldXbmRUVmxWNVpVYzVhRkpyY0hwVk1uaGhWakpGZUZkcVRtRlNNMmhvV1hwR2EyUkdTbk5VYXpWWFltdEdNMVpzWTNkbFJURkhWVzVPV0ZkSGFGVlphMlEwVjBac1dHUklXbXROVjNoV1ZXMDFUMVl3TVZaT1dHeFlZVEZ3VkZsV1drdGpNazVIV2taa2FWWkZWWGRXYlRCNFZqRkplRnBHYkdGU2JXaHdWVEJXUzJWc1duUmpSV1JhVm1zMVdGWldhRzlaVmtvMllrWmFXbUV4Y0ROV01WcFNaREpHU1ZSc2FGTmlSM2N5Vm14ak1WSXhXbGhUYTJScVVqSm9XRmxYZEdGamJIQkhWMnhPYWsxcldrbFpWV1J2WWtkS1IyTkdiRmRpVkVJMFZHdGFjMWRHVmxsaVJtUnBZWHBXV2xkWE1UUlRNazE0Vm01R1ZXSkZOWEZXYlhoTFYwWlplV1JFUW1sU01IQkpWbGMxYzFZd01YRlNXR1JhVmxad2FGa3ljekZXYkhCSFYyczFhR0V4Y0VwV2JURjNVVzFXUjFkWWJGVmhNbEp2VlcweFUySXhiRlZTYm1SWVVtMVNlbFp0TVVkaFJURnpVMnhvVjFKNlZreFdSRVpoWkVkR1IxVnNjR2hOYldoRlZrWmtORmxYVFhoalJXeGhVbXhLVDFsVVNqTk5SbVJZWkVkR2FFMXJXbnBWTWpWVFlVWk9SbU5HWkZwV00xSk1XVlZhWVZKV1NuTlViR1JPVmpGSmQxWlhNSGhPUjBaWFUyNVNhMlZyV2xsWmExcGhZMnhTVmxwRlpGTmhla1pZVmpJeGMxVXhTbFZXYkdSWVZqTlNhRmRXWkU5ak1XUjFWRzFHVTFkR1NsVldSbVI2VFZaT2MxWlliR3hTTTFKWFZGVlNRMDVXYkZaWmVsWlhUV3RhZVZVeU5VdFdNVm8yVW14b1lWSldjRlJaTW5oM1UwWktjMVJyTldsaVYyaG9WbTE0YTJReFRYbFRXR2hZWW1zMVdWbHRjekZpTVZWM1drWk9WazFYZUhwV01qRkhWa1pLYzJORmJHRlNWMUYzVm1wR1NtUXlUa1ppUjBaWFZqQXdlRlp0TUhoU01rNXpWRzVTYUZKdFVtOVVWbWhEWWpGa1ZWSnRSbFZOYkVwSFZERmFhMWxXU1hsbFJsSlZWbXhhTTFkV1dscGxWMUpIV2tkb1RsSkZXa3BXVnpFMFdWWlNjMXBGV21wVFJVcFhXVlJHZDFSR1dYZFhiazVxVFZaYWVsZHJXbE5WTWtwSlVXeHdWMUpzY0ZoVVZWcGFaVlpPY21GR1dtbGlhMHBvVm0xNFlXUXdNSGhpUmxwWFYwZG9XVlp0ZEdGWGJHdDNWMjEwVmsxcmNFaFpNR00xVjBkRmVGTnJhRmhXYlZKVVZXcEdUMlJXVG5SaFJrNU9UVlZ3VmxZeFpEQlpWMUY1Vlc1T1lWTkZOV2hWYTFaTFdWWmFkRTFVVWxoU2JHdzFXbFZrTUZkc1duSmpSV2hXVFdwV1NGWnNXbUZrUmxaVlVXeGtUbEp1UW1oWGJGcHJWakZPUms5V2FHaFNhelZ2VkZSQ1MyRkdXWGhYYkdSb1RWVnNORmRyYUU5WFIwVjRZMFpzV2xZelRYaFdNVnBoWkVkV1NWcEZOVTVXYmtGM1YyeFdhMDFIUlhoVFdHaFVZVEo0WVZSVlpGTmxiRnB4VW0xR1UwMVhVbmxaTUZwclZHeGFkVkZzYkZoV2JFcE1WVEl4VjFJeFduVldiRlpwVmxad1ZWWnRNREZSTVZweldrWm9hMUp0VW5KVVZtUlRVMFpzY21GRk9WZGlWVlkxVmxkek5WWldXbk5qUjBaVlZqTm9XRnBGWkZOU1ZrWjBZVVUxVjFkRlNUSldNVkpEWWpKTmVGcElUbGhpUjFKeFZXMHhiMWxXV25OWGJHUlBVbXh3ZUZVeWN6VlZNREZ5WTBWb1dsWldjSEpXUjNONFZtMU9SVlpzWkdsWFIyaFZWbGR3UjJNeFdYaFViR3hvVW0xb2NGbHJXbmRXTVdSWVpFZDBhVTFyTlVoWmEyaFBWMGRGZWxWdVRscGhNWEF6VkZWYVUxWnRSa2hQVm1Sb1pXdGFXbFpzWXpGa01XUnpWMnRhVDFkRmNGaFpWM1IzVkVaWmVGZHNaR3BOYTFwSVZtMTRhMVJyTVZaaVJGcFhZbGhDUkZkV1dscGxWbFp5WVVaV2FFMVlRbEpXYlRCNFZURmtSMkpJU21oU1ZUVlFXV3RhZDJWR1ZYaFZhMlJvVFVSR1dWWlhOWGRXTURGeFZteENXbFl6YUV4V01WcFhaRWRHUjFwSGJGZFNWbkJXVm14U1ExbFdXWGxVYkdSVVltczFhRlZxVGtOVU1XeFpZMFprVkdKSFVsbGFSV1JIVmxVeFYxTnFRbFpOYm1oMlYxWmFTMUl4WkhOaFJuQnBVbXR3U1ZaR1VrZFdNazVYVTI1V1ZXSkhhRlJaVkU1RFdWWmtWMVp0ZEZOTlZsWTBWakZvYzJGR1NuUmxSbXhYWWxob1RGWkZXbk5qVmtweldrWmtUbFl4U1hoV2JHTjRUVVphUjFOWWFGUmlSMUpZVlcxNGQyRkdjRVZUYkdScVRWZFNlbGxWWkRCVk1ERkhZMFprV0ZZelVsaGFSRUY0VWpGa2MyRkhlRk5OUm5CWlYxZDBZV1JyTVhOV2JsSnJVbnBzV0ZSVlVrZE5WbXhXV2tjNVdsWnJjRmhaTUZwdlYyc3hjVkpyZUZaaGExcHlXa1ZrUzFJeFVuSk9WMnhYVFZWV05WWnRNSGRsUlRWSVVtNVNWMkV5VWxaV01HUTBWbXhzZEdSSVpGWlNiSEF3VkZaYVQyRkdTbk5YYWtKVllrWmFVRmxYZUV0ak1XUnhVVzFHVTFZeWFIbFdiWFJoV1ZkTmVWUnJWbEppVlZwVVZtcEdTMU5XWkZkVmEwcHNVbTFTU0ZadE5VdGhWa3AwVlc1Q1YwMUdjRXhVYlhoaFpFZFdTR1JHVWs1V1ZGWkpWbTB3TVZZeFZuUlRhMlJxVW5wc1lWWnJWbUZOTVZwSFYyMUdWRkpVUmxaV1YzaDNWakF4UlZacVdsaFdiRXBRV2tSS1IxSXhUbGxpUjNoVFZrZDRXVmRYZUc5aU1XeFhWV3hhV0dKVlduRldiWE14WlVaV1dHVklaRmROYTNCWVZUSjBkMVl4V2taaWVrSllWbXh3Y2xVd1drOWpiVVpJWVVaT2FWWXlhRzlXTVdRd1dWWk5lRlJyWkZoaE1WcFVXVzB4VTFkR2JISmFSazVPVm14d1NWUldhR3RXTURGeVZtcGFWbFl6UW1oV01GcGhVbXhPZFZOc1ZtaE5XRUpZVjJ4YVlWUXlUWGhqUldSV1lsZDRXRlp0TlVOWlZscDBUVlJDVjAxVk1UVldSelZQWVZaT1JsZHNVbHBpUmxwb1ZtdGFVMVl4V2xWU2JYaHBVak5vTlZacVNqQk5SMFpIVjI1T2FWSkdXbUZXYkZwM1RURmFjVk5yZEZkV2ExcDRWbGQ0YTFZeVZuSlhiRkpZWWtaYWFGcEVSa3BsUjA1R1lVWk9hVkpVVmxsV1YzQlBZakExUjFkdVNsaGlWVnBoVm1wR1IwMHhVbGRYYlhSWFRXdHdlbFV5TlU5V2JVcEhVMjV3V21GcldtaGFSV1JUVTFaU2NrOVdUbWxTYkd0NFZtdGtOR0ZyTlZkWFdHUk9WbXh3Y1ZWclZrdFhSbHAwVFZjNWFtSkdiRE5XTWpGSFlXc3hjazVWWkdGU1YxSklWbXBHWVdSV1JuTmlSbVJvWVRGd2VWWlhjRWRUYlZaWFUyNUthRkl5ZUZSWmJHUnZWbFprVjFWck9WSk5WM2hZVmpJMVUyRXhTWGRYYlVaWFlsUkZNRll4V21GV01rWklUMVprVjAxR1dURldiR1EwWXpGWmQwMVZhRlpXUlVwWVZXdFdZV0ZHYkRaU2JtUlRUVlpLZWxsVldrOWhWa3BaVVcxR1YwMXVVbGhaYWtwR1pVWmtjbHBHYUdsaGVsWjRWbGQ0YTA1R2JGZFZiRnBZWW0xU1YxVnRlSGRsUmxaMFpVaGthRTFFUmxoWk1HaHZWakpLV1dGSVNsZGhhMFl6V2xaa1IxSXhTbk5hUlRWWFltdEtkbFpxUm1GaE1WSjBWbXhrVm1KcmNHOVZha3B2Vmtac2RHUkZkRlpTYlZKWlZGVm9iMkZYU2xkWGJuQlhUVzVvZGxsWGVFdFhSbFoxVTJ4V1YySkdWalJXVkVaaFZtMVdXRlZyYUZCV01taFlXVlJPUTA1V1draGxSMFpxVFZad01GVXlkR3RYUjBwMFpVZG9WMkpHY0ROWlZWcDNVbXhhV1dGR1pGZGlSbTkzVjFaV1ZrMVdWWGhUYkdScVVsaENXRmxzYUVOVFJteHhVMnR3YkZKdFVucFhhMlJIVlRGWmVXRkljRmRXZWtVd1YxWmFhMUl4Vm5OWGJVWlRZWHBXZVZkWGRHdE5SVEI0VjFoc2JGSXpVbTlVVmxaM1ZteFdkR1ZIUmxkTlZtOHlWVzF3VDFZeVJuSmpSWGhXWVd0d1VGVnNXbXRqTVhCR1RsZHNhVkpZUWpKV2JURXdWVEZOZUZOWWJGVmlhM0JQVm0weFUyRkdWbkZVYTA1WFVteGFlbFp0Tld0aFZURlhZMFJDWVZaWFVraFdNR1JMVmpGS2NWVnNjR2hOYldoTlZqRmFZVk14WkZkV2JrNVdZa1phV0ZSVVFYaE9SbHBZVFZSU1YwMVhVa2xXYlhScldWWktkRlZyT1ZkaVZGWkVWR3hhYTFaV1JuUlNiWEJPVm0xM01WWlhNREZUTVZwSVUyeG9hRkp0VWxaV2FrNURVMFphVlZKdVpGZE5WMUo2VmtjeGQyRldTWGhUV0dSWVZteGFhRlpFU2tkWFJrcFpXa2R3VTJFeGNGbFhWM1JyVkRBd2VGVnNaRmhoTVhCeVZGVlNSMWRzV2tobFJ6bG9WakJXTkZrd1dtRlhSbG8yVVZob1ZsWkZjRTlhVlZwaFpGWldkR05IZUdoTldFSlhWbTB3ZUU1R2JGWk5WV1JxVWxad2FGVnNaRk5pTVZwMFpFaGtiRlp0ZEROV1YzUlBWakF4VjJKRVdsZFNiRXBJVm1wQmVHTldTbkpsUm1ScFVtNUNUVmRyV21GaE1rMTVWR3RvYUZJeWFFOVdNRlpMVFd4YWNWSnNUbE5OVjNoWVZURm9jMVp0UlhsVmJGWmFZbGhOZUZsVldsZGpNVlp6V2tkc1RsZEZTbHBYYkZaaFpERlNkRk5yWkdsU1JrcFlWbXBPVTFWR1duRlJXR2hxWWxWd1JsWlhlR3RoVmtsNVlVUmFWMkpZVW5KVmJURlhWMFpLY2xwSFJsTmlhMHBhVmxSQ1YxTXdOWE5YYmxKT1ZrWktZVlpxUmt0WFZscElaRWRHV2xacmJEWldWelZEVm0xS1dXRkhSbFZXYkhCeVdYcEdZV1JHU25Sa1JUVm9UVEJLU2xac1VrcE5WbEY0V2tWb1ZHSnNTbk5WYWtKaFZteGFjMXBHVGxaTlZrcFhWakl4UjFZeFduSk9XR3hZWVRGVk1WbFdXa3RYVmtaeldrWmtWMkpXUlhkWFZsSkhWMjFXUjFSdVRtRlNNMEpVVld4b1ExZHNXblJqUlRsU1RWWktTRlp0TlVkV1IwWTJWbTVPVm1KWWFFeFVWbHBoVTBVeFdFOVdXazVoTTBKTFZsWmpNV0V4V1hsVGJHeFNZVE5vWVZsWGRHRmpiRlp4VW01a1UwMXJXa2xhVlZwUFlrZEtXV0ZHYUZkTlYxRXdWMVphYzFZeFVuSmFSbWhZVWpKb2RsWlhjRTlWTVdSWFZtNUdVbUp0VWxWWmExcGhWMVpTYzFacVFsZE5WbkI2V1RCb2QxZHJNVWRUYkVKWVZteHdhRmw2U2s5U1ZsSnpWMjFzV0ZJeWFIWldiVEUwV1ZaTmVWVnJhRk5oTWxKb1ZXcEtiMVF4VWxaV2JIQk9VbXh3TUZwVlpFZFhiRmwzWWtSV1ZtSkhhSFpYVmxwTFYwWldjMkpHY0ZkU1ZtOTZWbTE0WVdNeVRuTmpSV2hRVm01Q1dGbHJhRU5PVmxwMFRVaG9VMDFyV2pCVk1uUnZZVEpXY21OR1pGcGlSa3BIV2tSR1dtUXhaSFJTYlhSWFlURndOVmRXVm1GaU1rWkdUVmhPVkdGcmNGbFdiWGgzWVVaV05sSnRkRmROVlhBeFZrY3hkMVV5U2xkVGJFSlhZbGhDU0ZWcVFYZGxSbkJIV2taYWFFMHhTbFpYVjNoaFdWWmtSMWR1VWs5V2JWSllWbXBDZDFOV2JGWlhiazVYWWxWYWVWWXlkRFJXTURGMVlVaEtWMDFIVWxoVk1GVTFWakZrY2s1V1pHbGhNSEJoVm0wd2QyUXdNVmRUV0doWFlteEtWVmxyV25kWFZteHlWMjFHVjAxWGVIcFpWV00xWWtkS1IxTnVjRmROYWxaeVZtcEtTMVpzWkhKaVIwWlRWakZLTWxac1VrdFRNVTVYVW14c1lWSnRVbkJWYWtaSFRURmtXV05GWkdoTmF6RTBWMnRvVDJGR1NuTlhiR2hXWWtad00xWXhXbXRXTVhCRlVXMTBUbFpyY0VsV2Fra3hWREZrU0ZKWWNGWmlSMmhZV1d4b1UyRkdjRmhsU0VwclRWaENSbFpYTVc5Vk1WcEdVMWh3VjFaRmJ6QlZla1phWkRBeFYyRkhhRk5TVkZaWVYxWmtNR1F4VlhoalJscFlZa1UxY1ZSV2FFTlRSbHAwVFZoT2FGWnJjRnBWVjNCWFZqSktTRlJxVW1GV00wNDBWbXBHVjFkWFJrZFhiV3hUWW10S1dsWXhZM2RsUmxWNFdrVmthVk5GY0ZsWmJYTXhWVVpXZEUxV1RteFdiSEJaV2tWVk5WZEdTWGRqUldoYVlURktWRlp0TVV0WFZrWnpVV3hrYVZJeFNrMVdWM0JIWVRKU1YxUnVUbUZTVkZaVVZGWldkMVJzV25OVmEwNW9UVlZzTkZVeU5VdFZSbHAwVlcxb1ZtRnJjSFpXUkVaaFpFVTFWbFJzVm1sU2JrRjNWMnRXWVZReFZYZE5WbVJwVWtaYVdGWnFUbE5rYkZweFUydGFiRll4V2toV01uaDNWMFpPUmxOcVdsZGlXRkpvV1hwS1QyTXlUa1pXYkZab1pXeGFXVmRYZEc5Uk1VNXpXa2hPVjJKVldtRldiWGhIVGtaWmVHRkhkRmhTTUZZMVdsVmFhMVpXV2paV2JGSmFWbFp3ZWxZd1pGZFNiVkpJWkVaT1RsWnVRa3RXYkdONFRrZEZlVkpzWkZSaWJGcFRWakJvUTFkV2JGVlRiRXBPVW0xU1dGZHJWVFZXTURGWFUycEdWazFxUmtoV1ZFRjNaREZPZFZkc2FHbFNNVVYzVmpGYVlXRXhXWGhhU0ZaVllsVmFWRlZ0ZEhka2JGcEhWMjFHVjAxRVZraFdNV2h6VkRGYWRGVnNaRnBpUmxwb1dsZDRjbVF4WkhSUFZtaHBWbGhDU2xkV1ZtOVpWbVJ6VjJ4a2FsSnRhR0ZVVmxwM1ZFWndSbHBHVGxOTmExcElWa2N4YjFSck1VWmhNMmhYWWxoQ1RGUlZXbk5XTVdSWllrWk9hVkl4U2xaV2FrSnJZakZhVjJKSVVteFRSMUpaVlcxNFlVMUdjRlpXYWtKV1RWVndlbFp0Y0ZkWGJWWnlUbGhhV2xZelRqUldNRnBYWTFaS2MxcEdaR3hoTVZsNlZtMTRVMUZ0VVhsV2EyUlZZbXMxVkZsclpGTlhSbkJZWkVWd1RsSnNjRWxhUldSSFlVVXhWbUpFVWxoaE1taFlWbXhrUzFkSFJrZFdiRnBwVW10d1dWWnFSbUZaVm1SSVZHdGFWV0pIVWs5VmExcGhVMVprVjFWck9XaE5WMUpKVlRJMVMxUXhXblJoUmxwWFlrWndURlV3V2xabFJtUjFWR3hrYVZKdVFqWldhMlEwWVRGU2MxTnJXbGhoTW5oWlZtdFdTMk5zYkhGU2JYUnJVbXh3TVZVeWVHOWhWMFY2VVcwNVYxWjZSVEJhUkVGM1pVWmFkVkpzVG1sU1ZGWjRWMVpvZDFZeFpFZGFTRXBoVW5wc1ZsbHJXbk5PYkZwWFlVaGtWMDFyY0ZaVlYzQlRXVlpLUmxkck9XRlNSVVkwVm0xNGQxSXhaSE5oUms1T1lsZG9hRlpxUm1wbFJUVkhWRmhvV0dKSFVuQlZiWGhoVmtac2RFMVdUbGhTYkhBd1ZGWlNVMkpHV25OaVJGWlZZa2RSZDFacVFYaGpiVTVHWVVad1RsSXlaM3BXYlhCQ1pVZFNWMVp1VmxSaVIxSlVWRlJCTUUxR1duUmpSV1JvVFdzMU1GVnRkR3RYUjBwWVpVWlNXbFpGTlVOVVYzaGhaRWRXU0ZKc2NGZGlSM2N3Vm1wS05GbFdVbk5YYkdSWVlsUnNhRlpxVGtOUk1WRjRVbFJzVVZWVU1Eaz0=","port":80,"server":"47.76.44.217","type":"ss"}
  - {"alterId":0,"cipher":"auto","name":"761297344","network":"ws","port":2082,"server":"162.159.129.244","skip-cert-verify":true,"type":"vmess","uuid":"fe823d74-fa7e-4dc1-b16b-480bc201a153","ws-opts":{"headers":{"Host":"mg_cdn.yunjisuan.cf"},"path":"/"}}
  - {"alterId":0,"cipher":"auto","name":"1239082884","network":"grpc","port":15833,"server":"els_grpcone.yunjisuan.cf","skip-cert-verify":true,"tls":true,"type":"vmess","uuid":"fe823d74-fa7e-4dc1-b16b-480bc201a153"}
  - {"alterId":-1,"cipher":"chacha20-ietf","name":"481654331","obfs":"plain","obfs-param":"5d3ee46961.microsoft.com","password":"jFa4F1","port":2409,"protocol":"auth_aes128_sha1","protocol-param":"46961:1210-Tha","server":"zx02.endhigh.xyz","type":"ssr"}
  - {"alterId":0,"cipher":"auto","name":"1977535072","network":"ws","port":53764,"server":"146.190.109.211","skip-cert-verify":true,"type":"vmess","uuid":"cd2bb8a3-7330-490b-cae1-e6529c90be4d","ws-opts":{"headers":{"Host":"m.linkedin.com"},"path":"/"}}
  - {"alterId":-1,"cipher":"aes-256-cfb","name":"1756280623","password":"asdKkaskJKfnsa","port":443,"server":"135.125.172.139","type":"ss"}
  - {"alterId":-1,"cipher":"chacha20-ietf","name":"717795017","obfs":"plain","obfs-param":"5d3ee46961.microsoft.com","password":"jFa4F1","port":6706,"protocol":"auth_aes128_sha1","protocol-param":"46961:1210-Tha","server":"cm03.newcome.xyz","type":"ssr"}
  - {"alterId":0,"cipher":"auto","name":"437191064","network":"grpc","port":15147,"server":"mg_grpc.yunjisuan.cf","skip-cert-verify":true,"tls":true,"type":"vmess","uuid":"fe823d74-fa7e-4dc1-b16b-480bc201a153"}
  - {"alterId":-1,"cipher":"chacha20-ietf","name":"1195600929","obfs":"plain","obfs-param":"511df45641.microsoft.com","password":"jFa4F1","port":5701,"protocol":"auth_aes128_sha1","protocol-param":"45641:1119_jE165t","server":"cm01.newcome.xyz","type":"ssr"}
  - {"alterId":-1,"cipher":"chacha20-ietf-poly1305","name":"1499418859","password":"akZEcFVvS1VEWlBFR1RCSlJpTFpnbw==","port":28896,"server":"162.247.153.108","type":"ss"}
  - {"alterId":-1,"cipher":"chacha20-ietf","name":"1817049458","obfs":"plain","obfs-param":"511df45641.microsoft.com","password":"jFa4F1","port":6705,"protocol":"auth_aes128_sha1","protocol-param":"45641:1119_jE165t","server":"cm03.newcome.xyz","type":"ssr"}
  - {"alterId":-1,"cipher":"aes-256-cfb","name":"1424551756","password":"amazonskr05","port":443,"server":"13.112.160.25","type":"ss"}
  - {"alterId":-1,"cipher":"chacha20-ietf","name":"1043481097","obfs":"plain","obfs-param":"511df45641.microsoft.com","password":"jFa4F1","port":2400,"protocol":"auth_aes128_sha1","protocol-param":"45641:1119_jE165t","server":"zx01.endhigh.xyz","type":"ssr"}
  - {"alterId":-1,"cipher":"chacha20-ietf-poly1305","name":"673728796","password":"VkRGU1UyRkZPVVZSYlhoaFVqQnNNRlJxU2s1TlJURkVUVVJDVGxJeFJqUlVSbEp2WVVad1dGTllVazlpVmxZMVZEQmtXazB3TlVoU2JYaE9Va1p3Ync9PQ==","port":31012,"server":"6w7j3p03.6vczxw.xyz","type":"ss"}
  - {"alterId":-1,"cipher":"aes-256-gcm","name":"1732143285","password":"Vm0wd2VFNUhTWGxWV0doVlYwZDRWbFl3WkZOVlJscHpXa1pPVjAxWGVGWlZNbkJUVjBaYWRHVkdXbGRTZWtFeFdWZHplRmRIVmtWUmJGWlhZa2hDVVZkWGRHRlRNbEpIVm01V2FsSnRhRzlVVmxaM1VsWmFkR1JIUmxSTlZuQllWVEkxUzFkSFNrZGpSbWhoVmpOb2FGUnRlR3RXTVdSMFVteGtUbFp1UWxoV1JscFhWakpHU0ZadVJsSldSM001","port":8000,"server":"38.75.136.135","type":"ss"}
  - {"alterId":-1,"cipher":"aes-256-gcm","name":"2005820639","password":"","port":29524,"server":"89.185.31.107","type":"ss"}
  - {"alterId":-1,"cipher":"chacha20-ietf","name":"1008304590","obfs":"plain","obfs-param":"511df45641.microsoft.com","password":"jFa4F1","port":6701,"protocol":"auth_aes128_sha1","protocol-param":"45641:1119_jE165t","server":"cm03.newcome.xyz","type":"ssr"}
  - {"alterId":0,"cipher":"auto","name":"582287671","network":"ws","port":2082,"server":"162.159.141.214","skip-cert-verify":true,"type":"vmess","uuid":"fe823d74-fa7e-4dc1-b16b-480bc201a153","ws-opts":{"headers":{"Host":"mg_cdn.yunjisuan.cf"},"path":"/"}}
  - {"alterId":-1,"cipher":"aes-256-gcm","name":"1499705236","password":"Vm0weGQxSXhiRmRXV0doVFYwZG9XRll3Wkc5aFJsWnpXa2M1VjAxWGVEQlpNM0JIWVZVeFYxZHFRbFZpUmxwUVZqQmFZV1JIVmtsalJtUlhaV3hhVVZadGNFdFRNVWw0V2toT2FWSnNXbGhaYTFwV1pVWmFkR1JIUmxSaVZrWTBWakkxUjFaWFNraFZiRkphWVRGYU0xVnJXbUZXYkdSeVYyeENWMkV3Y0ZSV1ZWcFNaREZDVWxCVU1EMD0=","port":8882,"server":"38.75.136.135","type":"ss"}
  - {"alterId":0,"cipher":"auto","name":"1200792022","network":"ws","port":2096,"server":"162.159.129.87","skip-cert-verify":true,"tls":true,"type":"vmess","uuid":"12009e57-6fd8-46d6-94af-539514a7e7c7","ws-opts":{"headers":{"Host":"s1.shargh.shop"},"path":"/"}}
  - {"alterId":-1,"cipher":"chacha20-ietf-poly1305","name":"244896758","password":"Vm0xMFlWWXhWWGhTV0d4VFlrZFNjVlV3Vm1GVk1WcHlWMnQwVmxKc1duaFZWM2hyVkd4S2RGVnNhRmhoTWxKSVdWVmFTMlJXUm5KV2JGWlhWbXR3UlZaclkzaFdNazV6VTI1R1YySkdXbFJaYkZwTFZFWmFSMXBJY0U5V2JIQllWMnRhYzFadFNsWlhiVGxhWWtkb2RscEhlRnBsUmxaeVpFWndWMDFHY0ZsWFZFSlhWakZrY2sxSWJGWmlSVnBZV1ZSR2QyRkdhM2xaZW14UlZWUXdPUT09","port":36010,"server":"1j8p01.2weradf.xyz","type":"ss"}
  - {"alterId":-1,"cipher":"chacha20-ietf-poly1305","name":"2110093732","password":"VkRGU1UyRkZPVVZSYlhoaFVqQnNNRlJxU2s1TlJURkVUVVJDVGxJeFJqUlVSbEp2WVVad1dGTllVazlpVmxZMVZEQmtXazB3TlVoU2JYaE9Va1p3Ync9PQ==","port":31018,"server":"5m4h0k03.6vczxw.xyz","type":"ss"}
  - {"alterId":-1,"name":"657901581","password":"81cd0143-601c-44dc-b479-6f28b3b71c64","port":443,"server":"5.104.108.120","skip-cert-verify":true,"sni":"20-24-33-134.nhost.00cdn.com","type":"trojan","udp":true}
  - {"alterId":0,"cipher":"none","name":"1001740760","network":"ws","port":16618,"server":"yes.cnmjcn.net","type":"vmess","uuid":"c2c76420-257f-492a-b20f-6560f3bfa78d","ws-opts":{"path":"/"}}
  - {"alterId":0,"cipher":"auto","name":"2144594077","network":"ws","port":2052,"server":"162.159.129.79","skip-cert-verify":true,"type":"vmess","uuid":"fe823d74-fa7e-4dc1-b16b-480bc201a153","ws-opts":{"headers":{"Host":"mg_cdn.yunjisuan.cf"},"path":"/"}}
  - {"alterId":-1,"cipher":"chacha20-ietf-poly1305","name":"1556965371","password":"Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSV01WbDNXa1JTVjAxV2JETlhhMUpUVmpBeFYySkVUbGhoTVVwVVZtcEJlRll5U2tWVWJHaG9UVlZ3VlZadGNFSmxSbGw1VTJ0V1ZXSkhhRzlVVmxaM1ZsWmFkR05GU214U2JHdzFWVEowVjFaWFNraGhSemxWVm14YU0xWnNXbUZrUjA1R1UyMTRVMkpIZHpGV1ZFb3dWakZhV0ZOcmFHaFNlbXhXVm0xNFlVMHhXbk5YYlVacVZtdGFNRlZ0ZUZOVWJVcEdZMFZ3VjJKVVJYZFpWRVpyVTBaT2NscEhjRk5XUjNob1ZtMXdUMVV4U1hoalJscFlZbFZhY2xWcVFURlNNVlY1VFZSU1ZrMXJjRWxhU0hCSFZqRmFSbUl6WkZkaGExcG9WakJhVDJOdFJraGhSazVzWWxob1dGWnRNWGRVTVZGM1RVaG9hbEpzY0ZsWmJGWmhZMnhXY1ZGVVJsTk5XRUpIVmpKNFQxWlhTa2RqUm14aFUwaENTRlpxUm1GU2JVbDZXa1prYUdFeGNHOVdha0poVkRKT2RGSnJhR2hTYXpWeldXeG9iMWRHV25STlNHUnNVakJzTkZVeWRHdFhSMHBJVld4c1dtSkdXbWhaTW5oWFkxWktkRkpzVWxOaVIzY3hWa1phVTFVeFduSk5XRXBxVWxkNGFGVXdhRU5UUmxweFUydGFiRlpzV2xwWGExcDNZa2RGZWxGcmJGaFhTRUpJVmtSS1UxWXhXblZWYldoVFlYcFdlbGRYZUc5aU1XUkhWMjVTVGxOSFVuTlZha0p6VGtaVmVXUkhkRmhTTUhCSlZsZDRjMWR0U2tkWGJXaGFUVlp3YUZwRlpGTlRSa3B5VGxaT2FWSnRPVE5XTW5oWFdWWlJlRmRzYUZSaVJuQlpWbXRXZDFZeGJISlhhM1JVVW14d2VGVnRNVWRWTWtwV1lrUmFXR0V4Y0hKWlZXUkdaVWRPU0U5V1pHaGhNSEJ2Vm10U1MxUXlVa2RUYmtwb1VqSm9WRmxZY0ZkbGJHUllaVWM1YVUxWFVraFdNalZUVkd4a1NGVnNXbFZXYkhCSVZGUkdVMVp0UmtoUFYyaHBVbGhDTmxkVVFtRmpNV1IwVTJ0b2FGSnNTbGhVVlZwM1ZrWmFjVkp0ZEd0V2JrSkhWR3hhVDJGV1NuUlBWRTVYVFc1b1dGZFdXbEpsUm1SellVWlNhVkp1UWxwV2JYUlhaREZaZUdKSVNsaGhNMUpVVlcxNGQyVkdWWGxrUjNSb1lsVndWMVp0Y0dGWGJGcFhZMGRvV2xaWFVrZGFWV1JQVTBVNVYxcEhhR2hOU0VKMlZtMTBVMU14VVhsVmEyUlVZbXR3YUZWdE1XOWpSbHB4VTIwNWJHSkhVbGxhVldNMVlWVXhjbUpFVWxkTlYyaDJWMVphUzFJeFRuVlJiRlpYVFRGS05sWkhkR0ZaVms1SVZXdG9hMUp0VW5CV2JHaERVMVphY1ZOcVVsWk5WMUl3VlRKMGExZEhTbGhoUjBaVlZteHdNMWxWV25kU2JIQkhWR3hTVTJFelFqVldSM2hoVkRKR1YxTnVVbEJXUlRWWVZGYzFiMWRHWkZkWGJFcHNVbTFTZWxsVldsTmhWa3AxVVc1b1YxWXphSEpXVkVaelZqRldjMWRzYUdsV1ZuQlFWa1phWVdReVZrZFdXR3hyVWtWS1dGUldXbmRsVm10M1YyNWtXRkl3VmpSWk1GSlBWMjFGZVZWclpHRldNMmhJV1RJeFMxSXhjRWhpUm1oVFZsaENTMVp0TVRCVk1VMTRWbGhvV0ZkSGFGbFpiWGhoVm14c2NscEhPV3BTYkhCNFZUSXdOV0pIU2toVmJHeGhWbGROTVZsV1ZYaGpiVXBGVld4a1RtRnNXbFZXYTJRMFlURk9SMVp1VGxoaVJscFlWRlJHUzA1c1draGxSMFpYVFd4S1NWWlhkRzloTVVsNVlVaENWbUpIYUVOYVJFWmhZekZ3UlZWdGNFNVdNVWwzVmxSS01HRXhaRWhUYkdob1VqQmFWbFp1Y0Zka2JGbDNWMjVPVDJKRmNIcFhhMlIzWVZaT1JsTnJiRmROYmxKeVdYcEdWbVZXVG5WVGJGSnBWbFp3V1ZaR1l6RmlNV1JIWWtoR1ZHRXhjSE5WYlRGVFYyeGtjbFpVUmxkTlZuQjZXVEJhVjFkR1duTlRhMmhoVWtWYVlWcFZaRXRUVms1ellVZG9UazFWY0ZkV2JHTjRUa2RSZVZaclpGZFhSM2h5VldwQ1lXTkdWblJsU0dSc1lrWnNOVnBWYUd0WFJrbDNWbXBTV2sxSGFFeFdNbmhoVjBaV2NscEhSbGRXTVVwUlZsZHdTMU14U1hsU2EyaG9VbFJXV0ZsdGRFdE5iRnAwVFZSQ1ZrMVZNVFJXVm1oelZsWmtTR1ZHV2xwV1JWb3pXVlZhVjJOV1RuUlBWbVJUWWtWd1dsWkhlR3BPVmxsNFYyNU9hbEpYYUZsV2ExVXhaR3hzVjFaWWFHcGlWWEJHVmxkNGExUnNXWGxoUkVwWFRWWndhRlY2Umt0ak1WSjFWV3hPYVZJeFNuZFdha0pyWWpBMWMxZHJaRlpoTWxKWFZGWmFkMDFHVm5Sa1J6bFdVbXhzTlZsVmFFTldiVXBJWVVWU1ZXSllhSEpXYkZwSFpFWktkR05GTlZkTlZXd3pWbXhTUzAxSFJYaGFSV2hVWWtkb2IxVnFRbUZXYkZwMVkwWmthMkpHYkROV01qVkxZa1pLZEZWdWJGaGhNWEJ5Vm1wS1JtVnNSbkZYYkdSb1RXeEpNbFpHV21GWGJWRjNUVlprV0dKWGVITlpWRVozVjFaa1dHVkhPVkpOVmtwSVZsYzFTMWRIU2taalNFNVdZbFJHVkZwWGVITldiR1J6Vkcxb1YyRXpRWGhXVm1NeFlqRlplRmRZY0doVFJYQllWbXRXWVdWc1duRlNiR1JxVFZkU2VsbFZaSE5XTVZwMVVXeEdWMkV4Y0doWFZtUlNaVlphY2xwR1pGaFNNMmg1VmxkMFYxTXhaRWRWYkdSWVltMVNjMVp0TVRCTk1WbDVUbGQwV0ZKcmJETldiWEJUVjJzeFIxTnNRbGROYWtaSFdsWmFWMk5zY0VoU2JHUk9UVzFvU2xZeFVrcGxSazE0VTFoc1UyRXlVbTlWYlhoTFZrWmFjMkZGVGxSTlZuQXdWRlpTUTFack1WWk5WRkpYWWtkb2RsWXdXbXRUUjBaSFlrWndhVmRIYUc5V2JYQkhZekpOZUdORmFGQldiVkpVV1d4b2IxbFdaRlZSYlVab1RXdHdTVlV5ZEc5V2JVcElaVWRvVjJKSFVrOVVWbHB6VmpGYVdXRkdhRk5pUm5BMVYxWldZV0V4VW5SU2JrNVlZa1phV0ZsVVNsSk5SbHBGVW1zNVZGSnJjSGxYYTFwTFlWWktkVkZ1WkZkaVdGSllWbTB4VW1WR1pIVlZiWEJUVmpGS1dGWkdXbUZrTURGSFZtNVNhMUo2YkZkVmJYaDNUVVpzVmxkc1RsZFdiSEJaV1ZWV1UxWlhTa2RqUjJoV1RVZFNXRlV3V2t0a1IwNUdUbFprVGxaWGQzcFdiWGhUVXpBeFNGSllhR0ZTVjJoVldXdGtiMkl4Vm5GUmJVWlhZa1p3TVZrd1dtdGhNa3BIWWtST1YwMXFWa3haYTFwTFpFWldkV0pIUmxOV01VWXpWbXhTUzFKdFZuTlNia1pZWWtkU2NGVnFSa1prTVZweVZXdDBVMDFXYkRSV1IzaHpZV3hLZFZGck9WVldla1oyVmpGYWExWXhWbkphUjNST1lURndTVlpxU2pSV01WVjVVMnRrYWxORk5WZFpiRkpIVmtaU1YxZHNXbXhXTURReVZXMTRiMVV5UlhwUmJVWlhWbTFOZUZscVJscGxSbVJ4VjJ4S2FHSkZjR2hYVm1Rd1dWWnNWMk5HV2xoaVIxSnhWRmQwWVZJeFVYaFhiWFJvVWpGYWVsWXllRWRXTWtWNFkwZG9XRlp0VWxOYVZscGhZMnh3UjFwR2FGTk5NbWcxVm14a01GWXhUWGhhUldSV1lrZFNXVmx0TVZOak1WcDBUVlJDVGsxV2JEVlViR1F3VjBaS2NtSkVUbGRpV0VKVVZqSnplRkl4VG5OUmJHUk9ZV3RhU0Zkc1dtRldNazV6WTBWb1UySkhVazlVVnpGdlUyeFplRlZyY0d4U2F6RTBWVEZvYzFVeVJYbFZiVGxXWWxob1RGWnJXbUZqTWtaR1ZHeFNUbFp1UVhkV1JscFRVVEZhY2sxV1drNVdSa3BZV1d0a2IyUnNXWGRYYlhSVVVqQmFTRmxyV25kaFZtUklZVWM1VjJKVVJUQlpla3BQWXpKT1JtRkdRbGROTUVwVlYxZDBiMUV3TlVkWGJrcGFUVEpTVUZacVFsZE9WbFY1WkVkMGFHSkZjRmxaVlZwdlYyMUtSMU5yVGxWV2JIQm9WakJrVG1WdFJrZGhSazVwVW01Qk1sWXhXbGRaVjBWNFZXNU9XRmRIZUc5VmExWjNWMFpzV0dSRmRHcGlSbGt5VlcweE1GWXdNVmRqUkVaV1RXNW9SRlpxU2t0VFZrWjFWMnhvVjJKRmNFbFhhMUpIVkRGWmVGcElTbWhTTTJoVVZGVmFkMkZHV25STlNHaFdUVlZzTkZaWE5VOVhSMHBXVjJ4a1ZtSllhRE5VVlZwaFYwVTFWbFJzWkU1aE0wSktWMVpXVjFVeFduSk5XRlpvVTBWd1dGbFhkR0ZoUm5CR1ZsUldWMDFXY0hsVWJGcHJZVmRGZDFkWWNGZGlXR2h4V2tSQmVGWXhVbGxoUm1ob1RXMW9WbGRYZEd0aU1rbDRWbTVHVW1KVldsaFphMXAzVFVad1ZtRkhkRlZoZWtaYVZWZDRjMWxXV2xoaFJYaGFZVEZ3YUZac1drdGpNWEJIWVVkb1RsZEZTbEpXTVZwaFdWWk5lVlJ1VWxWaE1WcFpXV3RrVTJJeFVsaGpla0pPVW0xU1dsa3dWbXRXTWtwWFYyeG9WMUo2VmxoV2EyUkxVakZPZFZGc1pHbFNia0Y2Vm1wR1lWbFdTWGhpUkZwVFlsZDRUMVpxUmt0VFZsbDVaRWRHYUUxWFVrbFZNblJoWVd4T1JrNVdaRnBpUmtwSVZtdGFkMWRIVmtsVWJHUnBVakZLTmxaclkzaGlNVmw1VWxod1VsZEhhRmhXYlRGU1RVWndSVkpzY0d4V2F6VjZXV3RhWVdGV1NYbGhSemxYVmpOU1dGZFdXbk5XTWs1SFYyMUdVMWRHU2xaV2JURjZUVmRXYzJKR1dtRlNlbXhXV1Zod1IxWXhhM2RYYlVaWFRXdHdTVlpIY0ZOV1YwVjVWV3hPWVZac2NHaFpNbmgzVWpGd1IyRkdUazVOYldjeFZtMTRhMlF4UlhoaVJtaFZZVEpTV0ZsdGVFdGpNVlYzV2taT2FrMVhlSGxXTW5oclZERmFkVkZzWkZwV1YxRjNWakJhU21ReVRrWmhSbkJPVW01Q01sWnFTbnBsUms1SVVtdGFiRkp0VW05WlZFWjNZakZhV0UxVVVtaE5helV3Vm0xMGExbFdTbFZXYkdoYVlsaFNURlV5ZUZwbFJsWnlZMGQ0VTJGNlJUQldWRVp2WXpGVmVWSlliRlppVkd4WFdXeG9iMVJHV25KWGJVWnFUV3RhUjFaSGVGTlViRnAxVVZoa1YxSnNjRlJWVkVaaFkyc3hWMWRyTlZkU2EzQlpWMWQwYTJJeVVuTlhXR1JZWWxoU1ZWVnFRbUZUVm14V1YyMUdWV0pGY0RGVlZ6QTFWakpLVlZKVVFscGxhM0JRV1hwR2QxTldUblJrUms1T1RVVndWbFl4WkRCaU1VVjNUbFZrV0dKR1dsVldNR1JUVlVaYWNWRnVaRlJXYkZZMVdrVmpOVll5U2xaalJXeGhWbGRTZGxacVNrdFRSbFp5VDFaV1YySklRalpXYlhCSFdWWmtXRkpyWkdoU2F6VndWVzAxUWsxc1dYaFhiR1JhVmpCV05GWlhOVTlYUm1SSVpVYzVWbUV4V2pOV01GcHpWMGRTUm1SSGNHbFNiR3Q1Vmxjd2VFMUdXWGROVm1ScVVrVmFWMVJYTlc5U1JscHhVMnQwVkZacldqRldNbmh2VmpKS1JtTkZiRmhoTVVwSVZrUkdXbVZHY0VsVGJXaFRUVEpvVlZaR1ZtRmtNa1pIVjI1U1RsTkhhRmRVVmxaelRrWmFXRTVWT1ZoU01IQlhWako0YTFadFNsbGhSRTVWVmxad2VsWnRlR3RqTVZKeldrWmthVk5GU2xwV01WSkRZVEZKZUZkc1pGaGlhelZ4VldwS2IxbFdjRmhrUjBaT1RWWmFlbFl5ZUd0aE1VbDNUbFZrVldKR2NISldSM2hoVjBkUmVtTkdaR2xYUjJoVlZsaHdRbVZHVGtkVGJHeG9VakJhVkZacVNtOVdiR1JZWkVkMGFVMXJiRFJXYlRWSFZXMUtWbGRzYUZwaE1YQXpWRlZhZDFadFJraGtSbFpvWld0YVlWWldaRFJqTVd4WFYyeG9hRkpZYUdGWlZFWjNZVVphYzFkcmRHcE5XRUpJV1ZWa2IxUnNaRVpUYkVwWFRWWndhRmRXV2s1bFZsSjFWV3hXYUUxV2NGcFhWM1JyVlRKSmVGVnNhR3BsYTBwUFZXMHhVMWRzYTNkV2JYUlhUV3R3V0ZZeWVHOVdNVW8yVm14b1YyRXlVa3hWYWtaUFpGWkdjMXBIYkZOaWEwWTJWbTF3UjFsV2JGZFRXR2hwVWtad1ZGbHNaRFJVTVZweFVtdDBWRlp0VWxsYVJXTTFWVEF4VjJORmJGWmlSMmgyV1ZkNFQxSnJOVmRhUm5CcFVtdHdTVlp0ZEdGWGJWWllWbXRvYTFJelFuQlZiVFZEVmpGYVdFMVVVbWxOVmxZMVZXeG9kMVZ0U2xaWGJHaFhZbFJHVDFwVlduTmpWa3B6WTBkNFUySldTbUZYVkVKcllqRmFSMU51VmxKaVIyaFlXV3hvVTFkR1pGZFhiazVYVFdzMVNGWXllRzloVm1SSFUyNXNWMkpVUlhkYVJFcFhZekZrZFZWck5WaFNWRlpaVmtaYVYyTXdOWE5pUmxwV1lsVmFXRlJWVWtkWFZscFhZVWQwV0ZKc2NEQldWM2hQV1ZaYWMyTkhhRnBOYm1nelZXcEdkMU5IU2toaVJrNVlVbFZ3VTFadE1IZGxSVFZJVWxob1YxZEhhRmxXTUdSdlZqRnNjbHBIT1dwaVJsWXpWMnRhVDFkR1NuTlRiR2hYVFdwV2NsWkhlRXRrUjFKRlZHeG9hRTFXY0hsV2FrSmhVMjFSZVZScldtaFNia0pQVlcwMVEwMXNXbkZUYm5Cc1VtczFTRlp0TlZkWFIwcElWV3M1V2xZelVtaFZNRnByWXpGa2RGSnNaRTVoZWxZMlYxUkNWMkl4VlhsVGEyaFdZa2RvVmxadGVHRk5NVnBZWlVkR2FrMVdXbmxXUnpGdlZHeGFXR1I2UWxkV1JWcDJXWHBHVm1WV1NsbGlSMmhVVWxWd1dGZFhlRzlVYlZaSFlUTmtXR0pyTlZoV2JYUmhUVlprY2xaVVJtaFdhM0F4VlZab2ExWXhTbk5qUmxKV1ZrVmFhRmt5YzNoV01XUnlUbFprVTJFelFscFdiVEIzWlVkSmVWWnVUbGhpYXpWWldXeG9VMVpXVm5GU2JVWlVVbXhzTlZwVmFHdFdNREZXWTBab1dtRnJOVE5XTUZwaFl6RmtkR0ZHWkdoaE0wSlJWbTF3UjFVeVVsZFdiazVTWWtkU2NGWnRkSGRXYkZsNFdrUkNWMDFzUmpSWGEyaFBWMGRGZVdGSVRsWmhhelZFVmxWYVlXUkhWa2xVYXpsVFlrZDNNVlpIZUZaT1YwWklVMnRhYWxKdGVHRldiRnAzWld4YWNWTnJXbXhTYkhCYVdWVmtSMVV3TUhsaFJGcFhZbGhDU0ZkV1dtdFhSa3B5V2tkb1UyRjZWbmRXVnpCM1RsVTFSMWRZYUZaaE1EVmhWbXBDVjA1R1dsaE9WVGxZVW0xU1NWcFZZelZXYlVWNFYycE9WMDFHY0ZSV2FrWnJaRlp3U0dGR1RtbFNiWFExVm14amVFMUhVWGxUYTJSVVltczFWVmxYZEdGWFJteHpZVWM1VlZKdGVGaFdNblF3WVdzeGNrNVZhRnBoTVhCMlZtcEJkMlZHVG5GVGJHUlhZa1Z3U1ZkV1VrZFhiVlpIWTBWc1ZHSlZXbFJaYTJoRFpHeGFSMXBFVWxSTlYxSklWakowYTFkSFNsWlhia3BWVmxaS1NGVXdXbUZrUlRWWFZHMW9UbFpYT0hsWFYzUmhZVEZhZEZOc2JHaFNSVFZXVm14YWQyRkdXWGRhUlRsUFlrWndlbGxWWkhOVk1rcHlVMnRzVjJFeVVUQldha1pXWlVaa2MyRkdVbWhOYkVwNFZsZHdTMkl4V1hoVmJGcGhVbXMxV1ZWdGVGZE5NVmw1WkVSQ2FFMVZiRE5VYkZaclZsZEtSMk5JU2xkU00yaG9WakJrVW1WdFRrZGFSMnhZVWpKb05WWnJaREJoTVU1MFZteGtWbUpIZUhCVmJYTXhZakZTV0dWRmRGZGlSMUpaV2tWa01GWnJNVmRqUm1oYVlUSm9VRlpxU2t0V2JHUjBUMVphYVZkSFozcFhiRlpoV1ZaT1NGWnJXbEJXTW1oVVdWUk9RMDVzWkZoa1JrNVZUVlpzTTFSV2FFZFdNa3B5WTBab1YyRXhXak5XUlZwWFkxWk9jazlXVGs1aGVsWkpWMVJDWVdFeFdYbFRia3BVWVd4YVdGbHNhRk5qYkZKeVYyNU9XRkpzU2pGV1YzaFhZVVV4VjJOR2JGaFdNMUp5VmxSR1lWSXhWbk5XYkZKcFZrZDRkMVpHV21Ga01sWlhWMnhvYTFKRlNsZFVWVkpIVjFaYVdHUkhPVmRoZWtZeFdWVm9kMWRHV25OalJYUmhWak5vU0ZsNlJsZGpNWEJJWVVkb2JHSkdiRFZXYlRGM1VqRnNXRkpZYUdGU1YyaFlXVlJLYjFWV1duUmtTR1JWVFZad01GcEZhR3RXUmxwelkwaHdXRmRJUWtoV2ExVjRWMFpXY21KR1drNWliRXB2VjFaa05GUXhTbkpPVm1SaFVtNUNjRlZ0ZEhkVFZscDBaRWRHYTAxWFVrbFdiWFJ6VmxkS1NGVnVRbFpoYTFwTVZHMTRZV05zYTNwaFIyeE9WbXhaTUZacVNqQlpWbVJJVW01T2FsSnRhRmhaVkVaaFpWWndWbGR1VG1wV2EzQjZXVEJrTkZVeVNsZFRiVVpZVmtWS2FGZFdaRWRXTVU1WllrZG9VMkpyU2xsWFYzaFRVbXN4UjJORlZsTmlhelZZVkZkek1WTkdXWGxsUnpsb1ZtMVNTRlV5TlhOV01rcFZVbGhrWVZKRmNGaFpla1pyWkZaV2NrNVdaR3hpV0doWVZqRmtNRll5VVhoVWEyUllWMGQ0Y1ZWc2FGTlhSbEpZWkVoa1ZGWnNjRWxaTUZwUFZqRlpkMVpxVmxkV00yaFFWMVphWVdNeVRraGhSbkJPWW0xbmVsWlhjRWRrTVVsNVVtdGtWV0Y2Vms5WmJHUnFaVVphZEUxVVVtaE5iRVkwVmxab2IxWXhaRWhsUmxaWFRVZFNkbGt3V2xaa01WcFZVbXhvVTJKWVozZFdSbHBoVkRGa1IxTnVUbFJpUjJoWldWUkdTMVpHV2tobFIwWnJVakZLUmxaSGVHdGhWbVJHVTJ0V1YySllRa05hVldSUFpFWlNjbGR0YUZOaWEwcDJWa1phVjJReVNYaFhia1pVWVd4S1lWWnRlSE5PUmxwSVRsVTVWbUpWY0VsV1YzTTFWMnhaZWxWdGFGWk5SbkJ5V1hwR2EyUkdTbk5hUlRWb1pXeFpNbFl4VWtOV01rbDRWbGhzVkdFeWFGZFphMlJ2Vm14YWRHVkhSazVOVm5CWldsVmtSMkZyTVZsUmExcFhWak5vTTFacVFYaFNNV1JWVW14a2FFMVlRakpYVjNCTFVqSk5lRlJ1VG1oU01taFZWV3hXZDFkR1pGaGxSazVUVFd4S2VsWXlOVXRYUjBwV1YyNUdWVll6VW1oVmFrWmhVMGRXUjFSc1ZtbFNia0Y0VmxaYWIyRXhXWGhUYms1cVVteEtWMVpyVm1GaFJtdDVZek5vVjAxWFVubFViRnByVlRKRmVsRnNjRmROVjFGM1dWUktTbVZXVm5WVWJHaFlVakZLV2xkWGVHOVZNVnBYVm01R1VtSlZXbFZWYlRFMFZqRlplVTVYZEdoU2JIQXdWbGQwYzFkc1dsaFVWRVpYWVd0d1RGWnNXa3RXVmtaelkwZDRhRTB3U2xGV01uaFhZVEZSZUZOdVVsTmhNbEpUV1d0a1UyTkdXblJrU0dSWFlrWnNORmRyVWtOV01ERnpVbXBTV0dFeWFGQldNR1JHWlZkR1NWUnNXbWhoZWxaRlZteFdZVmxYVWtoV2EyeFZZWHBzVkZsclpETk5WbHBJWlVkR1ZVMVdiRFZWTW5oaFlXeEtXR1ZIUmxkaVJuQXpXa2Q0WVdOV1RuSmFSM0JvWld4YVdGWkVSbUZXTVZsNVUydHNVbUpVYkZoWlYzUkxZMnhhU0UxV1pHdFNhM0I1V1ZWa2QxVXdNWFZoUm14WFlXdEtXRlY2Ums5U01XUjFWVzE0VTAweFNsRldWM0JEVmpBMVIxZHNhRTlXVkd4WlZXMHhVMU5XY0ZaWmVsWlhZbFZXTkZZeWNFOVdNREZIWTBaU1YyRnJXbkphUmxwM1UwZEdSMVJ0YkZOaVdGRXhWbTE0YW1WRk1VWk5WV2hUWW10d1QxWnRNVk5XVm14WVpFZEdXRkpzY0hoV1J6QTFWbXhLZEdWR2FGZE5ibEl6V1d0YVMyTnJOVlZTYkdST1ltMW9NbFp0Y0V0VE1VcDBWR3RhYVZKdGFHOVVWbFozVTFaYWNsVnJaRmhpVmxwSVdUQldjMVpIU2xoaFJsSlZWa1ZhVEZac1dtRlNNVnAwVW0xMFRtRXhjRWxXYWtreFZURlNjMVJyYUdoU2JWSldWbTE0Vm1WR1dYZFhiSEJzVmpGYVNWUXhaRzlVYkZwWVQwaHNXRll6VW5GVWJGcGhWakZrZFZSc2FHaGhlbFpYVm0xNFlXUXlSa2RYV0dSaFVsUnNVRmxyV25kbGJHUnlWbFJHYUZKVVJscFZWbEpIVmpKS1dWRnJlRlZXVmxWNFZXcEdhMlJXVG5KT1ZtaFRZa2hDTWxac1pIZFRNa2w0WWtaa2FsSnRhSEpWYWtKaFZERlNWMWR0Um14aVJtdzFXbFZrTUdGRk1WWmlSRTVWWWtaYWNsWnNaRXRTTWs1SlUyeGtVMDB5YUc5V2FrSnJWVzFXZEZSclpHRlNNbmhaVldwS2IxWnNXbk5oU0dSU1lsWmFTRlpIZEd0V1IwcElaVWM1Vm1GclNtaFdhMXBoWTFaT2RFOVdaR2xTTVVwYVYydFdhMDFIUmxaTldFcHBVa1pLV0Zsc1VsZFdSbHBJWlVkR1QySlZjRWxWYlhocllWWmtTRm96Y0ZoaVJuQm9WMVprVTFKck1WZFhiVVpUWWtad2RsZHNaREJaVm1SWFdrWldVbUpVYkhGVVZscHpUVEZTVjJGRlpGWk5hMVkxV1ZWa1IxWXlSbkpPV0ZwYVZsWndlVnBXVlhoV2F6bFhWR3hrYUUxWE9UTldiR040VGtaUmVGZFlaRTVXYkhCWlZqQm9RMWRHYkhOaFJ6bFhVbXhaTWxWdGREQmhNVXB6WTBSR1YxSXphRkJaVmxwS1pXMUdTRTlXWkZkbGEwa3dWMWR3UzFReFNYaFhibFpXWWxob1ZWVnFSa3RrTVZwSFYyMTBWazFYVWtoV01uaHZZVEZLUmxOc1pGVldWa3BJVmpCYWMyTnNWbk5VYkdST1ZsYzRlVlp0TVRSaU1WbDVVMnRvVm1FemFGaFVWV1JUVTBaV2RHTjZWbGROVm5CNlYydGtOR0ZGTVZoUFZGWlhZbFJHTTFWcVJuTlhSa3BaWVVab1dGSXlhRmxYVnpFd1pESkdSMVp1UmxWaVJUVldWRlprTkZac1ZuUk9WM1JYVW14d2Vsa3dhRzlXYXpGMVVXeFNWMkZyUmpSV2FrWmhZMVphYzFkck5XbGlSWEExVmpGYWEwNUdVWGhUYmtwUFZtMVNhRlZ0TlVOalJsWjBaRWhrVkZac2NEQmFSV1JIVm1zeFYySkVVbGhoTW1oUVZqQmtTMWRYUmtkaFJsWlhWbXR3VkZkc1dtRlpWbVJHVFZaV1ZtSlhlRTlXYlhoYVRWWmFXR1ZIT1d0TlZsb3dWVEo0WVZkSFNraGhSbWhhWWtaS1NGWkVSbmRXYkdSMVZHMXdWMkV6UWpaWFZFSnJUa1pWZVZOc1pGUmhiRXBZV1ZkMGRrMUdWalpUYTJSVVVtczFlVll5TVhkVk1ERjBZVVp3VjJKVVFqUldWekZTWlVad1IxcEdhR2xoZWxaWlZrWmtlazFXVGtkWFdHeHNVbnBzYjFadGRITk9SbFY1VGxjNVYwMVZjREJXVm1oclYwWmFjMk5GZEdGV1ZuQllWakZrUjFJeVJraGlSbWhUWVROQmVWWnRlR3RrTVVsNFlrWm9WMkpyTlZsV01HUTBZMVpXY1ZGdFJsaFNiRXBYVmxkMGExZEdXbk5qUm1oYVZsZFJkMVl3V2t0ak1rNUZVV3hrVjAweWFGRldNVnBoV1ZkTmVWUnJhR2hTYmtKUFdXMHhibVZzV2xoalJXUnJUVlZzTlZWdGRHdFdWMFkyVm1zNVdtSkhVbkZhVlZwaFpFVXhWVlZ0YUU1aVJWa3dWbGQ0YjJJeVJsZFRibEpvVW14d1lWWnJWbmRXUmxsM1YyNU9hMUl4V2tkYVJXUjNWR3hhYzFkWWNGZE5ibEpvVmtSS1IyTnJNVmRoUjNoVVVqTm9XVlpHWkhkV01WWkhWMnRXVTJKVlduSldiWFJoWld4a2NsZHRPV2hTVkVaWVdUQm9jMVl5U2xsUmEwNWhWbGRTVUZwRldsTmpiR1IwWVVaT2FXRXdjREpXYTFwaFZqSlJlVk5ZYUZoaWExcFZXVmQ0UzFsV1duUmxTRTVQVW14d1NWUnNWVFZXYlVwV1kwVnNWMVl6VFRGV01uaGFaV3hXZEdGR1drNVNia0o1VjFod1IyRXlVa2RUYms1aFVsUldiMXBYZUZwTmJGbDRWV3RPVjAxcmJEUldiR2h6VmtkRmVXRkdaRnBoTWxKMlZtMTRZV1JIVmtoU2F6Vk9WbTVDV2xkc1ZtdFNNa1p5VFZaa1dHSnRlRmhWYWs1dlkyeHNWbHBHWkdwTlYxSjZXV3RhYTJGSFJYaGpSRXBZVjBoQ1NGWnRNVmRXTVU1ellrZHNVMDF0YUZWWGJHTjRUa1prUjFwR2FHdFNNRnBWVkZaa1UxTkdXWGhoUjNSWVVqQndlVlJzYUV0V2JVWnlWMnQ0Vm1GcldqTlZiWGhoVmxaS2RHRkdaR2hOTUVZMFZteGFZV0l5UlhoYVJXaFVZVEpTV1ZsdGRHRldiR3h5V2taT1UwMVlRa1pWVm1odlZqQXhXRlZ1YkZWaVJuQnlWbFJLUm1Wc1JuTmpSbVJwVmtWSmVsZHNWbXRUYlZaWFZtNVdWV0pIYUZsVmFrWkxWMnhrV0dWSE9WWk5WbkJZVm0wMVIxVnRTbFpYYkZaYVlURndhRlJWV25kV2JIQkdXa2RvVTJKSVFqVlhWM1JUVlRGYWRGTnJhR2hUUlhCWVdWZDBkMVJHV1hoWGEyUnFZbFZhU0Zrd1pEUmhSVEIzVTJ4R1YwMXVhRmhaVkVaU1pVWk9kVlJzYUdsaGVsWmFWMWQ0YTA1R1drZFZiR1JYWW0xU1dGbHJXbk5PUm1SeVZXeE9hRlpVUm5sWmExSlRWMjFGZUdOSVNsaFdiSEJNV1hwR2EyTXhVbk5qUjJ4VFlraENkbFl4WkhkU01WVjRXa1ZvVm1FeWVHaFZiWGhMVjBac2NsZHNjRTVXYlZKNVZtMHhkMVF4V25OaVJGWldUVzVvYUZsWGVFdFhSMVpJWVVaa2FWSXhTbFZYYTJRMFdWZE9WMVJ1U210U2JFcFVXV3RhZDA1V1drVlNiVVpYVFZac05WVXlkSE5WYlVaelkwWm9XbUpIYUVSVk1GcHJWakZrZEdSR2FGTmhNMEkxVjFaV2EyUXhWWGROV0Zab1VtMTRXRmxYZEV0WFJsWTJVbXM1VTAxWFVqRldWekUwVlRBd2VGTnNSbGRXTTBKRVZtcEJNVkl4WkhOaFJUbFhZWHBXV0ZaR1pEQmtNbFpYVlc1T1dHSnJOVmxaYkZaWFRrWnJkMXBIT1ZkTlJFWklXVEJvZDFZeVNrZGpSa0phWld0YVVGa3ljekZXTVZKMFlrWmthRTB3U21oV2JUQjRaREZOZDAxVldrNVdWMmhVV1cxMGQxUXhXblJOVms1WFZtMTRXVnBGWkVkWFJrcHpWMnBHV2sxR1duSlpWRXBMVWpKT1IxZHNXazVpYkVZelZteFNRbVZIVG5KT1ZscG9VbTVDYjFSV2FFTk5iRnAwWTBWS2EwMXNXbGxWYlhSdlZVWmFkRlZzYUdGV00xSkxWRlZhWVdNeGEzcGhSbVJPVmxkM01GZFVRbGRqTVZsNVUydGFUMWRGU2xkWmEyUnZVa1p3UlZKdFJtdFNNVnBKVlcweE1GUnRTa2RqUld4WFlXdHZkMWxVUm5OV01WSnlZa1pLYUdWdGVGbFhWbVF3V1ZkR1IyTkdhR3hTTTFKeFdXeFdZVkl4Y0VaYVJ6bFdUV3RXTmxWWGNGZFdNVWw2WVVoR1ZXSkdjR2hXYWtaclpGWlNjMkZIYUdobGJGcFlWbTB4TkZsWFVYbFNhMlJZVjBkU1dGWnJWbUZYUm14eVYydDBiR0pIVW5sV2JGSkhZVVpLVlZGcVRsWk5ibEYzVm1wQmVGWXlUa2RoUm1Sb1lURndXRmRzVm1GaE1sSlhWRzVLVDFadFVuQldiWFIzVGtaYWMxVnJUbGROYkVZMFYydFdhMkZXVGtaalJteGFZbFJHVkZac1dsZGtSVFZXVkd4T1RsWnRkekZYYTFaVFVUSkdSazFXV21sU1JUVldXV3RhWVdOc1duTmFSWFJUVFdzMVNsVXllR3RWTURCNVlVYzVWMkZyU25KV1Z6RlhaRVpTY2xwSFJsTk5ibWhhVmxkd1MySXhXbk5YYms1b1UwZFNVMWxzV21GVFJscElaRWQwVjFJd2NFbGFWV00xVm0xR2NsTnRhRmRoTVhCb1dURmFUMlJGT1ZkYVIyeFRUVlZ3WVZZeWRGZGhNREZJVW14YVRsZEZjSEJWYTFwTFYwWnNjMVZzWkZkU2JIQkpXbFZrUjFReVNsWmpSV3hXWWxob2NsbFdXbXRUUm05NlkwWm9hVkp1UW05V01WcHJWVEZLY2sxV1pGaGlWVnBVV1d0YWQyUnNaSE5hUkVKYVZtMVNlbGRyYUU5V01rcFdWMjA1VlZac2NIcFVWRVpUVmpKR1JscEdaRTVoTTBJMVYxUkNZV0l4V1hsU1dHaFlZV3MxV0ZWc1duZFdNWEJXVjIxMGFtSklRa2xaTUdSelZqRmFkVkZyY0ZkaGEyOTNWMVphVW1WR1ZuVlRhelZZVW10d2RsWlhNVFJrTVdSSFlraE9WbUV5VWs5VVZscGFUV3hXZEdONlJtbFNiSEI2VlRKd1IxWXhTWHBoUm1oYVZtMVNSMXBYZUVka1ZtUnpXa1prYkdFd2EzZFdiWGhUVWpGc1YxTllhRmRpYXpWWVdXdGFTMk5HV25KYVJGSnJUVlp3U0ZZeU1VZGhNREZ6VjJ4b1YwMXVhSFpaVkVaTFVteE9jMXBHVmxkV2EzQkpWbXBHWVZsV1pFaFZhMmhRVm0xU2IxcFhkRnBsUm1SWFZtMDVhMDFYVWtoV01qVlBZV3hLV1ZWdGFGZGhhelYyVlRCYWMwNXNTbk5hUjNCT1YwVktTbGRXVm10aU1rcElVMnRrYVZKR1dsaFpiRkpIVFRGV2NWSnVUbGhTYTNCYVdWVmtSMVV4V1hsaFJteFlWbXhLVEZscVJsZFdNV1IxVlcxMFZGSXhTbGRXUmxwaFpESldjMWRzYUd0U01GcFdXV3RXZDAxR1dsaGxSMFpYWWtac05sbFZhRXRXTWtaeVVtcFNWMkZyV25KYVJtUlBVakZ3Ums1WGJHbFNXRUl5Vm0weGQxRXlSWGhVV0doVllUSm9XRmxVU2xOaFJsWjBUbFZPYWxKc1duaFZNakExVmpGYWMyTkZhRmRXTTFKeVdWUkJlRll5U2tWVmJHaG9UVzFvVlZkV1VrZFRiVlp6VW01V1VtSkdjRzlaVkVaM1ZFWmtjbFZyWkZwV2EzQllWVEkxVTJFeFNYbGxSVGxYWWxSRmVscFhlR0ZTTVdSeldrZG9UbUV4Y0VoV1JsWnZZekpLUjFOdVVtaFNNRnBoV1ZSR2QxUkdWbFZTYm1SWFlrZFNNVlpITVhkV01rVjZVV3BhV0ZaRlNuSlVhMXBXWlZaT2MxcEdVbWhpUm5CWlYxWmtNR1JyTVVkWGJGWlVZVEpTV1ZWdGRIZFhiR3QzVjJ0MGFGWnJiRFJWTW5oM1ZqSktWVkpVUWxabGExcFFWV3BLVDFKc1duTlZiV2hzWWxob05GWnJXbUZaVjFGM1RWWmtWMkpzU25OVmJGSnpZakZhZEdSSVRrOVNiRlkxVkd4ak5WWXdNVlpqU0hCYVRVZG9hRlp0ZUdGU2JHUnpVV3hrYUdFeGNHOVhhMXBoVmpKU1NGWnJaRlZpUjFKVVZGUktibVZzV25SbFIzUnJUVlZXTlZaV2FHOVpWazVHVGxoQ1ZtSllhRE5XTVZwelZsWk9jMVJzYUZOaVJYQmFWMnRXWVdFeFVYaFRibEpyVWtVMVdWbFVTazVOVmxsM1YydDBhazFyTlVaVlYzaHJWakF3ZVdGR1JsZE5WbkJvVjFaa1RtVldVbkpoUjJoVFltdEtVRmRYTUhoaWJWWnpWMnhvYWxKWFVuSlVWbFV4VTFaVmVXUkhPV2hXYTNCNVZHeGFjMVp0U2tkWGJteGhWbFp3YUZwRlZYaFdWbFowWVVVMVUxSldjRXBXYlhCSFlqSkplRmRzWkdGU1YyaHpWVzE0WVZkR1VsWmFSazVyWWtkME0xWXllR3RoTVVwVlVteGFWMVo2UmpOV2FrcExVakpPUlZkc1pFNWliRXB2Vm10U1MxSXlUbkpOVm1SaFVqTkNWRlZzVm5kaU1WcDBaVWRHV0dKV1JqUlphMmhMV1ZaS1dWVnNVbFZXTTAxNFZXMTRWMWRIVmtkYVIyaFhZVE5DTmxadGVHOWlNVmw1VW01S1ZHSlhhRmRVVjNCSFZURndWMWRzVG1waVIxSXdXVlZhVDJGWFJYZGpSa1pYWWtkT00xUldXa1prTURGWlZHeG9hV0V4Y0ZaWFZ6QXhVVEpOZUZadVVtdFRSVFZRVlcxNGQxTldVbk5XVkZaWFlsVndWMWt3Vm5OV01WbDZWRlJHVjAxcVJreFdiRnBMWkZaa2MyTkhhR2hOV0VKMlZqRlNSMWxXU1hsVmEyUlVZbXMxYUZWc1VsZGlNWEJZWlVad1RtSkdiRFJXVjNSUFZqQXhjbUpFVWxkaVIyaDZWbXRrUm1WWFJrZGFSbkJvVFd4S01sWnRNVFJaVjFKSVZtdG9VMkY2Vms5V2JUVkRWMnhrYzFadGRGTk5hMXA1VkZaYWExZEhTblJsUm1oV1lXczFkbGt5ZUhOV2JIQkhXa2R3VGxZeFNqWlhWM1JoWVRKR1NGSllhR3BTUlhCWlZqQm9RMU5HV25STlZtUlhUVlUxZWxsclpITlZNa3BKVVc1a1YySllVbkpVYTFwclVqRndSMkZIZUZObGJYaDNWa1phWVZNeFRrZFhXR3hQVmxoU1dWVnFRbmRXTVZsNVRsVmtWMVpzYkRaV1Z6RnZWbTFHY2xkdGFGWk5SMUpZVldwR1UyTXhXblJpUms1cFlUQlpNRlp0ZUdGaE1sRjRWbGhvV0ZkSGFGbFpWRVozWTFaV2NsWlVSbGROVm5CNVZtMHhSMkZHU25Sa1JGWmFaV3MxZGxacVFYaFhSbFp4VVd4d2FFMVlRbEZXYkZKTFVtMVdjMUp1VG1wU2JWSndWV3BCTUdWc1pITldiWFJVWWxaYVdGWXlOVmRXVjBwSVlVaENXbUV4V2pOV1ZWcGhaRWRXU0ZKdGRFNWhla1V3Vm1wSk1WVXlTa2RUV0dSWVltczFZVmxVUm5kTk1WSldWMjVrVjJKVldrbGFSV1J2VlRKS1NWRllaRmRpUjFGM1dXcEdZV05yTVZkaFIyaFRVbFJXV1ZaR1ZtRmtNV3hYWTBab2JGSlhVbkZaYkZaaFUwWmtjbHBIT1doU1ZFSXpWVEo0UzFZeVNsVlNhazVXWVd0YVlWcFdXbGRqTVhCSFdrZHNhR1ZzV2xWV01XUXdZVEZWZVZSclpGaGliRXB5VlRCa1UxZEdiSEpYYms1UFVtMVNlVlpYZUU5aFJscFZVbTVzV21FeFNsUldNakZHWlVkT1NWTnNhRmRpU0VKTlYxaHdSMkV5VFhoVmJrNXFVako0VkZscmFFTmtiRmw0V2toa1UwMVdWalJXTVdodldWWk9SMWR0YUZaaGF6VjJXVEJhVjJSSFZrZGpSVFZYWWtoQ1NsZHNWbXRTTVZwV1RWWmthVkpHV2xkVVZ6VnZZVVpzV0dWRmRGaFNNVnBKV1ZWYWEyRldTWGhUYkZaWVlUSlJNRmRXWkU5V01WSjFVMjEwVTJKRmNGVlhWM1JoWkRBMWMxZHVTbHBOTW1oVVZGWmFWMDVHVlhsbFIzUm9Za1Z3U0Zrd1dtOVhiVXBJWVVWU1ZrMUdjSEpXYWtaclpFZFNSMkZHVG1oTk1Fa3hWbXBLTUdFeVNYaFdXR3hUWVd4d1dGbHRNVk5YUmxwMVkwVktiRkpzV2xsWmVrNXZZV3N4V0ZWc2NGcFdWbkIyV1ZaYVNtVkdUblJoUm1ScFYwVktSVlp0Y0VKTlZrbDRXa2hPYUZKVWJGaFdhMlEwVjJ4YVdFMUlhRlpOVlRWWVdUQmFZVmR0Vm5OWGJHaGFZa1phV0ZScldscGxWMDVHVDFaa1RsSkZXa2xYVkVKdlpERlpkMDFWYUZaaVJrcFhXV3hTUjFaR1ZYZGFSVGxVVWpCd1NGWkhNWE5WTURCNFVsaG9WMkpVUlRCWlZ6RlhVbXN4Vmxkck5WZFdNbWhWVjFjeE5GTXhXa2RpUm1oc1UwZFNXVlZ0TVRSbFZtUnlXWHBXV0ZKc2NEQmFWVnBoVm0xS1ZWWnVTbHBXZWtaTVZUQmtWMUl5UmtkYVJUVnBZa1ZaZWxZeFdtdGxiVlpJVkc1S1QxWnNjRzlWYlRWRFlqRlNWMkZGVGs1aVJuQXdXVEJXUzJFd01YTlhhMmhYVW5wV1NGWnJaRXRUUmxaellVWndhRTFXYjNwV1ZFWmhZVEZaZUZadVNtRlNiV2h3Vm0xNGQxTldaRlZSYkdScVRWWndTVlV5ZUc5aFJrcHpVMnhhVjJFeFdqTmFSM2hoWXpGa2RGSnNUazVXYmtGM1ZsY3dlRTFHVW5SU1dHaHFVbGQ0V0ZsWGRISmxSbHBWVW14T2FrMVlRa2RaYTFwTFlVZFdkR1ZHYkZoV00yaDJWbFJLVjJNeFZuVlRiR2hwVmxad1dsWlhlRk5XTVZsNFZWaG9XR0pVYkZkVVZWSkhVMnhXV0dWSE9WZE5hMXA1V1c1d1ExZHNXa1pYYldoaFVsWndVRmw2U2t0VFIwWkhWR3hPVjFKc2NGbFdiVEI0VGtac1dGVlliRk5oTWxKWlZqQmtVMWRHV25KV2JVWllVbTE0ZVZZeWREQmlSMHBJVlc1c1YySkdTa2haVlZwTFZsWkdjVlJzV2s1aWJFWXpWbTF3UW1WR1dYbFVhMlJvVW0xU2IxbFVSbmRYUm1SelZtMUdhRTFzU2xoV1J6VkxWREZhZEdGR1VscGhNbWhFVkZkNFlXTXhWbkpVYkdST1lrVlpNRmRYZEdGaE1rWnpVMjVTYUZORmNGZFpWM1JMWVVac2NWSnNaR3RTVkZaWFZrZDRUMVJzV1hoVGFsWlhZV3R3TmxSc1dtRmphekZXVm14T2FWSXlhRmhXUm1SM1ZqSldjMWR1VG1GU1dGSlVWRmR6TVZOc1ZYbGxSM1JXVFVSQ00xUnJVa05YUjBWNFYyNUtWbUZyV2xCVmFrWlBaRlpTZEZKc1RrNWliV2hhVm14a05GbFhUWGRPV0U1WVltczFiMVV3WkZOV1ZsSlhWMjFHVGxKc2NEQmFSV00xVmpGSmQxWnFWbGRXZWtaMlZtMHhTMVpXU25OVmJHUk9WbTVDV1ZkVVJtRlVNbEpHVDFaa2FGSXllRlJVVmxaM1YyeGFkR1ZIZEU1U01GWTFWV3hvYTFSc1duUlZia1pXWWxSR2RsZFdXbk5XVms1MFQxWldVMkpXU2xsV2Frb3dUVVpSZVZOc1dtcFNWMmhoV1ZSR2QyRkdiRmRYYlVaVFlrWndXbGRyV210aFIwVjRZMGM1V0ZaRmJEUldha3BUVWpGV2RWTnNhR2xXVm5CVlZrWmplR0l4VmtkYVJtUldZWHBzVTFSV1ZURmxiR1J5WVVVNVYwMXJjRmRXTWpBMVZsWmFjMk5JY0ZWV1JWcFVWbXBLUjFKc2NFZFhhelZvVFZacmVGWXhXbGRoTVVsNFYxaHNVMkpyY0ZCV01GcDNXVlphYzFkdVpHeFdia0pZVm14b2IxWXlSalppUm1oWFZqTm9jbFpIZUV0U01XUnlZMFprVGxadVFsbFhWbEpMVTIxV1IxWnVWbFZpVlZwVVZtMDFRMVpzV25GUmJYUlBVbTFTU0ZscmFFOVdiVVY1VldzNVZWWnNjR0ZVVjNoWFpFZE9ObEp0YkZOaVNFSTJWbFJLZDFJeFdYaFRXSEJvVW0xb1lWWnRNVk5TTVhCWVpVVmthMVp1UWtoWGExcHJZa2RGZDJFelpGZGlXR2hVVldwS1JtVkdUbGxpUmxKb1RXNW9WMWRYZEd0aU1rbDRWV3hrYUZKVk5YTldiWGgzVTBaWmVVMVZaR2hoZWtaR1ZtMTBiMVl3TVZoaFNIQlhVak5vYUZZd1dsZGpNa3BIVjIxb2FFMUhPVFpXYlhCRFdWWmtkRlpzYUZaaE1taFJWbTB4VTFReFduTlplbEpzVm14d01GUldVa05VTVVwellrUk9WVlpzV25aV2JURkdaVzFHUjFwR2NHbFNNbWhRVjJ4V1lWbFhUbGRVYmtwaFVtczFUMVpxUmtwa01XUllaRWRHVlUxcldsbFZiR2hyWVd4S2RWRnNhRnBpUjJoVVdUSjRVMk5zWkhKa1IzQm9aVzE0V1ZZeWRHRlRNa1pYVTJ4c1VtSkZOVmhaYkdoVFZrWldXR042VmxaaVJVcFdWRlZSZDFCUlBUMD0=","port":31020,"server":"1c7s2g01.6vczxw.xyz","type":"ss"}
  
proxy-groups:
  - name: 🔰 节点选择
    type: select
    proxies:
      - ♻️ 自动选择
      - 517697891
      - 262441138
      - 631404655
      - 680966275
      - 375866800
      - 1447976235
      - 199195483
      - 985046753
      - 2137789297
      - 746195740
      - 858040832
      - 499788368
      - 1560326386
      - 287102188
      - 761297344
      - 1239082884
      - 481654331
      - 1977535072
      - 1756280623
      - 717795017
      - 437191064
      - 1195600929
      - 1499418859
      - 1817049458
      - 1424551756
      - 1043481097
      - 673728796
      - 1732143285
      - 2005820639
      - 1008304590
      - 582287671
      - 1499705236
      - 1200792022
      - 244896758
      - 2110093732
      - 657901581
      - 1001740760
      - 2144594077
      - 1556965371
      
  - name: ♻️ 自动选择
    type: url-test
    url: http://www.google.com/generate_204
    interval: 300
    proxies:
      - 517697891
      - 262441138
      - 631404655
      - 680966275
      - 375866800
      - 1447976235
      - 199195483
      - 985046753
      - 2137789297
      - 746195740
      - 858040832
      - 499788368
      - 1560326386
      - 287102188
      - 761297344
      - 1239082884
      - 481654331
      - 1977535072
      - 1756280623
      - 717795017
      - 437191064
      - 1195600929
      - 1499418859
      - 1817049458
      - 1424551756
      - 1043481097
      - 673728796
      - 1732143285
      - 2005820639
      - 1008304590
      - 582287671
      - 1499705236
      - 1200792022
      - 244896758
      - 2110093732
      - 657901581
      - 1001740760
      - 2144594077
      - 1556965371
      
rule-providers:
  reject:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/reject.txt"
    path: ./ruleset/reject.yaml
    interval: 86400

  icloud:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/icloud.txt"
    path: ./ruleset/icloud.yaml
    interval: 86400

  # apple:
  #   type: http
  #   behavior: domain
  #   url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/apple.txt"
  #   path: ./ruleset/apple.yaml
  #   interval: 86400

  google:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/google.txt"
    path: ./ruleset/google.yaml
    interval: 86400

  proxy:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt"
    path: ./ruleset/proxy.yaml
    interval: 86400

  direct:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt"
    path: ./ruleset/direct.yaml
    interval: 86400

  private:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt"
    path: ./ruleset/private.yaml
    interval: 86400

  gfw:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/gfw.txt"
    path: ./ruleset/gfw.yaml
    interval: 86400

  tld-not-cn:
    type: http
    behavior: domain
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/tld-not-cn.txt"
    path: ./ruleset/tld-not-cn.yaml
    interval: 86400

  telegramcidr:
    type: http
    behavior: ipcidr
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.yaml
    interval: 86400

  cncidr:
    type: http
    behavior: ipcidr
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt"
    path: ./ruleset/cncidr.yaml
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/lancidr.txt"
    path: ./ruleset/lancidr.yaml
    interval: 86400

  applications:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/applications.txt"
    path: ./ruleset/applications.yaml
    interval: 86400
rules:
  - RULE-SET,applications,DIRECT
  - DOMAIN,clash.razord.top,DIRECT
  - DOMAIN,yacd.haishan.me,DIRECT
  - RULE-SET,private,DIRECT
  - RULE-SET,reject,REJECT
  - RULE-SET,tld-not-cn,🔰 节点选择
  - RULE-SET,gfw,🔰 节点选择
  - RULE-SET,telegramcidr,🔰 节点选择
  - MATCH,DIRECT